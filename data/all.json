{
 "files": [
  "fabric.ActiveSelection.html",
  "fabric.BaseBrush.html",
  "fabric.Canvas.html",
  "fabric.Circle.html",
  "fabric.CircleBrush.html",
  "fabric.Collection.html",
  "fabric.Color.html",
  "fabric.CommonMethods.html",
  "fabric.Ellipse.html",
  "fabric.Gradient.html",
  "fabric.Group.html",
  "fabric.IText.html",
  "fabric.Image.filters.BaseFilter.html",
  "fabric.Image.filters.Blur.html",
  "fabric.Image.filters.Brightness.html",
  "fabric.Image.filters.ColorMatrix.html",
  "fabric.Image.filters.Contrast.html",
  "fabric.Image.filters.Convolute.html",
  "fabric.Image.filters.Gamma.html",
  "fabric.Image.filters.GradientTransparency.html",
  "fabric.Image.filters.Grayscale.html",
  "fabric.Image.filters.HueRotation.html",
  "fabric.Image.filters.Invert.html",
  "fabric.Image.filters.Mask.html",
  "fabric.Image.filters.Multiply.html",
  "fabric.Image.filters.Noise.html",
  "fabric.Image.filters.Pixelate.html",
  "fabric.Image.filters.RemoveColor.html",
  "fabric.Image.filters.RemoveWhite.html",
  "fabric.Image.filters.Resize.html",
  "fabric.Image.filters.Saturate.html",
  "fabric.Image.filters.Saturation.html",
  "fabric.Image.filters.Sepia.html",
  "fabric.Image.filters.Sepia2.html",
  "fabric.Image.filters.Tint.html",
  "fabric.Image.filters.Vibrance.html",
  "fabric.Image.filters.fabric.Image.filter.Blend.html",
  "fabric.Image.filters.fabric.Image.filter.BlendColor.html",
  "fabric.Image.filters.fabric.Image.filter.BlendImage.html",
  "fabric.Image.filters.html",
  "fabric.Image.html",
  "fabric.Intersection.html",
  "fabric.Line.html",
  "fabric.Object.html",
  "fabric.Observable.html",
  "fabric.Path.html",
  "fabric.PathGroup.html",
  "fabric.Pattern.html",
  "fabric.PatternBrush.html",
  "fabric.PencilBrush.html",
  "fabric.Point.html",
  "fabric.Polygon.html",
  "fabric.Polyline.html",
  "fabric.Rect.html",
  "fabric.Shadow.html",
  "fabric.SprayBrush.html",
  "fabric.StaticCanvas.html",
  "fabric.Text.html",
  "fabric.Textbox.html",
  "fabric.Triangle.html",
  "fabric.html",
  "fabric.js.html",
  "fabric.util.array.html",
  "fabric.util.ease.html",
  "fabric.util.html",
  "fabric.util.object.html",
  "fabric.util.string.html",
  "global.html",
  "index.html"
 ],
 "props": [
  {
   "section": "default",
   "name": "new ActiveSelection",
   "hash": "#ActiveSelection",
   "desc": "Group class",
   "file": 0
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 0
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 0
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 0
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 0
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "Groups are container, do not render anything on theyr own, ence no cache properties",
   "file": 0
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 0
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 0
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 0
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 0
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 0
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 0
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 0
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 0
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 0
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 0
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 0
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 0
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 0
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 0
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 0
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 0
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 0
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 0
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 0
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 0
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 0
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 0
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 0
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 0
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 0
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 0
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 0
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 0
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 0
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 0
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 0
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 0
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 0
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of stroke",
   "file": 0
  },
  {
   "section": "Members",
   "name": "subTargetCheck",
   "hash": "#subTargetCheck",
   "desc": "Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets",
   "file": 0
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 0
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 0
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 0
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 0
  },
  {
   "section": "Members",
   "name": "useSetOnGroup",
   "hash": "#useSetOnGroup",
   "desc": "setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still available setting this boolean to true.",
   "file": 0
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 0
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#add",
   "desc": "Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`). in case of Group no changes to bounding box are made. Objects should be instances of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the add method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "addWithUpdate",
   "hash": "#addWithUpdate",
   "desc": "Adds an object to a group; Then recalculates group's dimension, position.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 0
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns number representation of a collection complexity",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "contains",
   "hash": "#contains",
   "desc": "Returns true if collection contains an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "destroy",
   "hash": "#destroy",
   "desc": "Destroys a group (restoring state of its objects)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "forEachObject",
   "hash": "#forEachObject",
   "desc": "Executes given function for each object in this group",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getObjects",
   "hash": "#getObjects",
   "desc": "Returns an array of children objects of this instance Type parameter introduced in 1.3.10 since 2.3.5 this method return always a COPY of the array;",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export, specific version for group",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "insertAt",
   "hash": "#insertAt",
   "desc": "Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`) An object should be an instance of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the insertAt method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isEmpty",
   "hash": "#isEmpty",
   "desc": "Returns true if collection contains no objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isOnACache",
   "hash": "#isOnACache",
   "desc": "Check if this group or its parent group are caching, recursively up",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "item",
   "hash": "#item",
   "desc": "Returns object at specified index",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "If returns true, deselection is cancelled.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "remove",
   "hash": "#remove",
   "desc": "Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "removeWithUpdate",
   "hash": "#removeWithUpdate",
   "desc": "Removes an object from a group; Then recalculates group's dimension, position.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders instance on a given context",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setObjectsCoords",
   "hash": "#setObjectsCoords",
   "desc": "Sets coordinates of all objects inside group",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "size",
   "hash": "#size",
   "desc": "Returns a size of a collection (i.e: length of an array containing its objects)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toActiveSelection",
   "hash": "#toActiveSelection",
   "desc": "make a group an active selection, remove the group from canvas the group has to be on canvas for this to work.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns object representation of an instance, in dataless mode.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toGroup",
   "hash": "#toGroup",
   "desc": "Change te activeSelection to a normal group, High level function that automatically adds it to canvas as active object. no events fired.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of a group",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "ungroupOnCanvas",
   "hash": "#ungroupOnCanvas",
   "desc": "Destroys a group (restoring state of its objects)",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 0
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow",
   "file": 0
  },
  {
   "section": "default",
   "name": "new BaseBrush",
   "hash": "#BaseBrush",
   "desc": "BaseBrush class",
   "file": 1
  },
  {
   "section": "Members",
   "name": "color",
   "hash": "#color",
   "desc": "Color of a brush",
   "file": 1
  },
  {
   "section": "Members",
   "name": "limitedToCanvasSize",
   "hash": "#limitedToCanvasSize",
   "desc": "When `true`, the free drawing is limited to the whiteboard size. Default to false.",
   "file": 1
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 1
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Stroke Dash Array.",
   "file": 1
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of a brush (one of \"butt\", \"round\", \"square\")",
   "file": 1
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of a brush (one of \"bevel\", \"round\", \"miter\")",
   "file": 1
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's",
   "file": 1
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width of a brush, has to be a Number, no string literals",
   "file": 1
  },
  {
   "section": "default",
   "name": "new Canvas",
   "hash": "#Canvas",
   "desc": "Canvas class",
   "file": 2
  },
  {
   "section": "Members",
   "name": "allowTouchScrolling",
   "hash": "#allowTouchScrolling",
   "desc": "Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas",
   "file": 2
  },
  {
   "section": "Members",
   "name": "altActionKey",
   "hash": "#altActionKey",
   "desc": "Indicates which key enable alternate action on corner values: 'altKey', 'shiftKey', 'ctrlKey'. If `null` or 'none' or any other string that is not a modifier key feature is disabled feature disabled.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "altSelectionKey",
   "hash": "#altSelectionKey",
   "desc": "Indicates which key enable alternative selection in case of target overlapping with active object values: 'altKey', 'shiftKey', 'ctrlKey'. For a series of reason that come from the general expectations on how things should work, this feature works only for preserveObjectStacking true. If `null` or 'none' or any other string that is not a modifier key feature is disabled.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of canvas instance. Should be set via",
   "file": 2
  },
  {
   "section": "Members",
   "name": "backgroundImage",
   "hash": "#backgroundImage",
   "desc": "Background image of canvas instance. since 2.4.0 image caching is active, please when putting an image as background, add to the canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom vale. As an alternative you can disable image objectCaching",
   "file": 2
  },
  {
   "section": "Members",
   "name": "backgroundVpt",
   "hash": "#backgroundVpt",
   "desc": "if set to false background image is not affected by viewport transform",
   "file": 2
  },
  {
   "section": "Members",
   "name": "centeredKey",
   "hash": "#centeredKey",
   "desc": "Indicates which key enable centered Transform values: 'altKey', 'shiftKey', 'ctrlKey'. If `null` or 'none' or any other string that is not a modifier key feature is disabled feature disabled.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, objects use center point as the origin of rotate transformation.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, objects use center point as the origin of scale transformation.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the canvas has rendered, and the context is placed in the top left corner of the canvas. clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true",
   "file": 2
  },
  {
   "section": "Members",
   "name": "containerClass",
   "hash": "#containerClass",
   "desc": "Default element class that's given to wrapper (div) element of canvas",
   "file": 2
  },
  {
   "section": "Members",
   "name": "controlsAboveOverlay",
   "hash": "#controlsAboveOverlay",
   "desc": "Indicates whether object controls (borders/controls) are rendered above overlay image",
   "file": 2
  },
  {
   "section": "Members",
   "name": "defaultCursor",
   "hash": "#defaultCursor",
   "desc": "Default cursor value used for the entire canvas",
   "file": 2
  },
  {
   "section": "Members",
   "name": "enablePointerEvents",
   "hash": "#enablePointerEvents",
   "desc": "When the option is enabled, PointerEvent is used instead of MouseEvent.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "enableRetinaScaling",
   "hash": "#enableRetinaScaling",
   "desc": "When true, canvas is scaled by devicePixelRatio for better rendering on retina screens",
   "file": 2
  },
  {
   "section": "Members",
   "name": "fireMiddleClick",
   "hash": "#fireMiddleClick",
   "desc": "Indicates if the canvas can fire middle click events",
   "file": 2
  },
  {
   "section": "Members",
   "name": "fireRightClick",
   "hash": "#fireRightClick",
   "desc": "Indicates if the canvas can fire right click events",
   "file": 2
  },
  {
   "section": "Members",
   "name": "freeDrawingCursor",
   "hash": "#freeDrawingCursor",
   "desc": "Cursor value used during free drawing",
   "file": 2
  },
  {
   "section": "Members",
   "name": "FX_DURATION",
   "hash": "#FX_DURATION",
   "desc": "Animation duration (in ms) for fx* methods",
   "file": 2
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over an object on canvas",
   "file": 2
  },
  {
   "section": "Members",
   "name": "imageSmoothingEnabled",
   "hash": "#imageSmoothingEnabled",
   "desc": "Indicates whether this canvas will use image smoothing, this is on by default in browsers",
   "file": 2
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "Indicates whether toObject/toDatalessObject should include default values if set to false, takes precedence over the object value.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "interactive",
   "hash": "#interactive",
   "desc": "Indicates that canvas is interactive. This property should not be changed.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "isDrawingMode",
   "hash": "#isDrawingMode",
   "desc": "When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing. After mousedown, mousemove creates a shape, and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving an object on canvas",
   "file": 2
  },
  {
   "section": "Members",
   "name": "notAllowedCursor",
   "hash": "#notAllowedCursor",
   "desc": "Cursor value used for disabled elements ( corners with disabled action )",
   "file": 2
  },
  {
   "section": "Members",
   "name": "overlayColor",
   "hash": "#overlayColor",
   "desc": "Overlay color of canvas instance. Should be set via",
   "file": 2
  },
  {
   "section": "Members",
   "name": "overlayImage",
   "hash": "#overlayImage",
   "desc": "Overlay image of canvas instance. since 2.4.0 image caching is active, please when putting an image as overlay, add to the canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom vale. As an alternative you can disable image objectCaching",
   "file": 2
  },
  {
   "section": "Members",
   "name": "overlayVpt",
   "hash": "#overlayVpt",
   "desc": "if set to false overlya image is not affected by viewport transform",
   "file": 2
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When true, object detection happens on per-pixel basis rather than on per-bounding-box",
   "file": 2
  },
  {
   "section": "Members",
   "name": "preserveObjectStacking",
   "hash": "#preserveObjectStacking",
   "desc": "Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group",
   "file": 2
  },
  {
   "section": "Members",
   "name": "renderOnAddRemove",
   "hash": "#renderOnAddRemove",
   "desc": "Indicates whether",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selection",
   "hash": "#selection",
   "desc": "Indicates whether group selection should be enabled",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionBorderColor",
   "hash": "#selectionBorderColor",
   "desc": "Color of the border of selection (usually slightly darker than color of selection itself)",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionColor",
   "hash": "#selectionColor",
   "desc": "Color of selection",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionDashArray",
   "hash": "#selectionDashArray",
   "desc": "Default dash array pattern If not empty the selection border is dashed",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionFullyContained",
   "hash": "#selectionFullyContained",
   "desc": "Select only shapes that are fully contained in the dragged selection rectangle.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionKey",
   "hash": "#selectionKey",
   "desc": "Indicates which key or keys enable multiple click selection Pass value as a string or array of strings values: 'altKey', 'shiftKey', 'ctrlKey'. If `null` or empty or containing any other string that is not a modifier key feature is disabled.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "selectionLineWidth",
   "hash": "#selectionLineWidth",
   "desc": "Width of a line used in object/group selection",
   "file": 2
  },
  {
   "section": "Members",
   "name": "skipOffscreen",
   "hash": "#skipOffscreen",
   "desc": "Based on vptCoords and object.aCoords, skip rendering of objects that are not included in current viewport. May greatly help in applications with crowded canvas and use of zoom/pan If One of the corner of the bounding box of the object is on the canvas the objects get rendered.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "skipTargetFind",
   "hash": "#skipTargetFind",
   "desc": "When true, target detection is skipped. Target detection will return always undefined. click selection won't work anymore, events will fire with no targets. if something is selected before setting it to true, it will be deselected at the first click. area selection will still work. check the `selection` property too. if you deactivate both, you should look into staticCanvas.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "snapAngle",
   "hash": "#snapAngle",
   "desc": "Indicates the angle that an object will lock to while rotating.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "snapThreshold",
   "hash": "#snapThreshold",
   "desc": "Indicates the distance from the snapAngle the rotation will lock to the snapAngle. When `null`, the snapThreshold will default to the snapAngle.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "stateful",
   "hash": "#stateful",
   "desc": "Indicates whether objects' state should be saved",
   "file": 2
  },
  {
   "section": "Members",
   "name": "stopContextMenu",
   "hash": "#stopContextMenu",
   "desc": "Indicates if the right click on canvas can output the context menu or not",
   "file": 2
  },
  {
   "section": "Members",
   "name": "svgViewportTransformation",
   "hash": "#svgViewportTransformation",
   "desc": "When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true, a zoomed canvas will then produce zoomed SVG output.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "targetFindTolerance",
   "hash": "#targetFindTolerance",
   "desc": "Number of pixels around target pixel to tolerate (consider active) during object detection",
   "file": 2
  },
  {
   "section": "Members",
   "name": "targets",
   "hash": "#targets",
   "desc": "Keep track of the subTargets for Mouse Events",
   "file": 2
  },
  {
   "section": "Members",
   "name": "uniformScaling",
   "hash": "#uniformScaling",
   "desc": "When true, objects can be transformed by one side (unproportionally) when dragged on the corners that normally would not do that.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "uniScaleKey",
   "hash": "#uniScaleKey",
   "desc": "Indicates which key switches uniform scaling. values: 'altKey', 'shiftKey', 'ctrlKey'. If `null` or 'none' or any other string that is not a modifier key feature is disabled. totally wrong named. this sounds like `uniform scaling` if Canvas.uniformScaling is true, pressing this will set it to false and viceversa.",
   "file": 2
  },
  {
   "section": "Members",
   "name": "viewportTransform",
   "hash": "#viewportTransform",
   "desc": "The transformation (a Canvas 2D API transform matrix) which focuses the viewport",
   "file": 2
  },
  {
   "section": "Members",
   "name": "vptCoords",
   "hash": "#vptCoords",
   "desc": "Describe canvas element extension over design properties are tl,tr,bl,br. if canvas is not zoomed/panned those points are the four corner of canvas if canvas is viewportTransformed you those points indicate the extension of canvas element in plain untrasformed coordinates The coordinates get updated with @method calcViewportBoundaries.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "__onMouseWheel",
   "hash": "#__onMouseWheel",
   "desc": "Method that defines actions when an Event Mouse Wheel",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "_chooseObjectsToRender",
   "hash": "#_chooseObjectsToRender",
   "desc": "Divides objects in two groups, one to render immediately and one to render as activeGroup.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "_onDrop",
   "hash": "#_onDrop",
   "desc": "`drop:before` is a an event that allow you to schedule logic before the `drop` event. Prefer `drop` event always, but if you need to run some drop-disabling logic on an event, since there is no way to handle event handlers ordering, use `drop:before`",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "_setCursorFromEvent",
   "hash": "#_setCursorFromEvent",
   "desc": "Sets the cursor depending on where the canvas is being hovered. Note: very buggy in Opera",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "absolutePan",
   "hash": "#absolutePan",
   "desc": "Pan viewport so as to place point at top left corner of canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#add",
   "desc": "Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`). in case of Group no changes to bounding box are made. Objects should be instances of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the add method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object or a selection up in stack of drawn objects An optional parameter, intersecting allows to move the object in front of the first intersecting object. Where intersection is calculated with bounding box. If no intersection is found, there will not be change in the stack.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object or the objects of a multiple selection to the top of the stack of drawn objects",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "calcOffset",
   "hash": "#calcOffset",
   "desc": "Calculates canvas element offset relative to the document This method is also attached as \"resize\" event handler of window",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "calcViewportBoundaries",
   "hash": "#calcViewportBoundaries",
   "desc": "Calculate the position of the 4 corner of canvas with current viewportTransform. helps to determinate when an object is in the current rendering viewport using object absolute coordinates ( aCoords )",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "centerObject",
   "hash": "#centerObject",
   "desc": "Centers object vertically and horizontally in the canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "centerObjectH",
   "hash": "#centerObjectH",
   "desc": "Centers object horizontally in the canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "centerObjectV",
   "hash": "#centerObjectV",
   "desc": "Centers object vertically in the canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "clear",
   "hash": "#clear",
   "desc": "Clears all contexts (background, main, top) of an instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "clearContext",
   "hash": "#clearContext",
   "desc": "Clears specified context of canvas element",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones canvas instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "cloneWithoutData",
   "hash": "#cloneWithoutData",
   "desc": "Clones canvas instance without cloning existing data. This essentially copies canvas dimensions, clipping properties, etc. but leaves data empty (so that you can populate it with your own)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns number representation of a collection complexity",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "contains",
   "hash": "#contains",
   "desc": "Returns true if collection contains an object",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "createSVGFontFacesMarkup",
   "hash": "#createSVGFontFacesMarkup",
   "desc": "Creates markup containing SVG font faces, font URLs for font faces must be collected by developers and are not extracted from the DOM by fabricjs",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "createSVGRefElementsMarkup",
   "hash": "#createSVGRefElementsMarkup",
   "desc": "Creates markup containing SVG referenced elements like patterns, gradients etc.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "discardActiveObject",
   "hash": "#discardActiveObject",
   "desc": "Discards currently active object and fire events. If the function is called by fabric as a consequence of a mouse event, the event is passed as a parameter and sent to the fire function for the custom events. When used as a method the e param does not have any application.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "Clears a canvas element and removes all event listeners",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCanvas",
   "hash": "#drawClipPathOnCanvas",
   "desc": "Paint the cached clipPath on the lowerCanvasEl",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws objects' controls (borders/controls)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "findTarget",
   "hash": "#findTarget",
   "desc": "Method that determines what object we are clicking on the skipGroup parameter is for internal use, is needed for shift+click action 11/09/2018 TODO: would be cool if findTarget could discern between being a full target or the outside part of the corner.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "fire",
   "hash": "#fire",
   "desc": "Fires event with an optional options object",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "forEachObject",
   "hash": "#forEachObject",
   "desc": "Executes given function for each object in this group",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "fxCenterObjectH",
   "hash": "#fxCenterObjectH",
   "desc": "Centers object horizontally with animation.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "fxCenterObjectV",
   "hash": "#fxCenterObjectV",
   "desc": "Centers object vertically with animation.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "fxRemove",
   "hash": "#fxRemove",
   "desc": "Same as `fabric.Canvas#remove` but animated",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "fxStraightenObject",
   "hash": "#fxStraightenObject",
   "desc": "Same as fabric.Canvas.prototype.straightenObject, but animated",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getActiveObject",
   "hash": "#getActiveObject",
   "desc": "Returns currently active object",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getActiveObjects",
   "hash": "#getActiveObjects",
   "desc": "Returns an array with the current selected objects",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getCenter",
   "hash": "#getCenter",
   "desc": "Returns coordinates of a center of canvas. Returned value is an object with top and left properties",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getContext",
   "hash": "#getContext",
   "desc": "Returns context of canvas where objects are drawn",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getElement",
   "hash": "#getElement",
   "desc": "Returns &lt;canvas> element corresponding to this instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getHeight",
   "hash": "#getHeight",
   "desc": "Returns canvas height (in px)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getObjects",
   "hash": "#getObjects",
   "desc": "Returns an array of children objects of this instance Type parameter introduced in 1.3.10 since 2.3.5 this method return always a COPY of the array;",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getPointer",
   "hash": "#getPointer",
   "desc": "Returns pointer coordinates relative to canvas. Can return coordinates with or without viewportTransform. ignoreZoom false gives back coordinates that represent the point clicked on canvas element. ignoreZoom true gives back coordinates after being processed by the viewportTransform ( sort of coordinates of what is displayed on the canvas where you are clicking. ignoreZoom true = HTMLElement coordinates relative to top,left ignoreZoom false, default = fabric space coordinates, the same used for shape position To interact with your shapes top and left you want to use ignoreZoom true most of the time, while ignoreZoom false will give you coordinates compatible with the object.oCoords system. of the time.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getSelectionContext",
   "hash": "#getSelectionContext",
   "desc": "Returns context of canvas where object selection is drawn",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getSelectionElement",
   "hash": "#getSelectionElement",
   "desc": "Returns &lt;canvas> element on which object selection is drawn",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getVpCenter",
   "hash": "#getVpCenter",
   "desc": "Calculate the point in canvas that correspond to the center of actual viewport.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getWidth",
   "hash": "#getWidth",
   "desc": "Returns canvas width (in px)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "getZoom",
   "hash": "#getZoom",
   "desc": "Returns canvas zoom level",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "insertAt",
   "hash": "#insertAt",
   "desc": "Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`) An object should be an instance of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the insertAt method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "isEmpty",
   "hash": "#isEmpty",
   "desc": "Returns true if collection contains no objects",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "isTargetTransparent",
   "hash": "#isTargetTransparent",
   "desc": "Returns true if object is transparent at a certain location",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "item",
   "hash": "#item",
   "desc": "Returns object at specified index",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "loadFromJSON",
   "hash": "#loadFromJSON",
   "desc": "Populates canvas with data from the specified JSON. JSON format must conform to the one of",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "relativePan",
   "hash": "#relativePan",
   "desc": "Pans viewpoint relatively",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "remove",
   "hash": "#remove",
   "desc": "Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "removeListeners",
   "hash": "#removeListeners",
   "desc": "Removes all event listeners",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "renderAll",
   "hash": "#renderAll",
   "desc": "Renders both the top canvas and the secondary container canvas.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "renderCanvas",
   "hash": "#renderCanvas",
   "desc": "Renders background, objects, overlay and controls.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "renderTop",
   "hash": "#renderTop",
   "desc": "Method to render only the top canvas. Also used to render the group selection box.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "requestRenderAll",
   "hash": "#requestRenderAll",
   "desc": "Append a renderAll request to next animation frame. unless one is already in progress, in that case nothing is done a boolean flag will avoid appending more.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "restorePointerVpt",
   "hash": "#restorePointerVpt",
   "desc": "Returns pointer coordinates without the effect of the viewport",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object or a selection down in stack of drawn objects An optional parameter, intersecting allows to move the object in behind the first intersecting object. Where intersection is calculated with bounding box. If no intersection is found, there will not be change in the stack.",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object or the objects of a multiple selection to the bottom of the stack of drawn objects",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setActiveObject",
   "hash": "#setActiveObject",
   "desc": "Sets given object as the only active object on canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setBackgroundColor",
   "hash": "#setBackgroundColor",
   "desc": "Sets",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setBackgroundImage",
   "hash": "#setBackgroundImage",
   "desc": "Sets",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setCursor",
   "hash": "#setCursor",
   "desc": "Set the cursor type of the canvas element",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setDimensions",
   "hash": "#setDimensions",
   "desc": "Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setHeight",
   "hash": "#setHeight",
   "desc": "Sets height of this canvas instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setOverlayColor",
   "hash": "#setOverlayColor",
   "desc": "Sets",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setOverlayImage",
   "hash": "#setOverlayImage",
   "desc": "Sets",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setViewportTransform",
   "hash": "#setViewportTransform",
   "desc": "Sets viewport transformation of this canvas instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setWidth",
   "hash": "#setWidth",
   "desc": "Sets width of this canvas instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "setZoom",
   "hash": "#setZoom",
   "desc": "Sets zoom level of this canvas instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "size",
   "hash": "#size",
   "desc": "Returns a size of a collection (i.e: length of an array containing its objects)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "straightenObject",
   "hash": "#straightenObject",
   "desc": "Straightens object, then rerenders canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Create a new HTMLCanvas element painted with the current canvas content. No need to resize the actual one or repaint it. Will transfer object ownership to a new canvas, paint it, and set everything back. This is an intermediary step used to get to a dataUrl but also it is useful to create quick image copies of a canvas without passing for the dataUrl string",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toDatalessJSON",
   "hash": "#toDatalessJSON",
   "desc": "Returns dataless JSON representation of canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns dataless object representation of canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns Object representation of canvas this alias is provided because if you call JSON.stringify on an instance, the toJSON object will be invoked if it exists. Having a toJSON method means you can do JSON.stringify(myCanvas)",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns SVG representation of canvas",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "viewportCenterObject",
   "hash": "#viewportCenterObject",
   "desc": "Centers object vertically and horizontally in the viewport",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "viewportCenterObjectH",
   "hash": "#viewportCenterObjectH",
   "desc": "Centers object horizontally in the viewport, object.top is unchanged",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "viewportCenterObjectV",
   "hash": "#viewportCenterObjectV",
   "desc": "Centers object Vertically in the viewport, object.top is unchanged",
   "file": 2
  },
  {
   "section": "Methods",
   "name": "zoomToPoint",
   "hash": "#zoomToPoint",
   "desc": "Sets zoom level of this canvas instance, the zoom centered around point meaning that following zoom to point with the same point will have the visual effect of the zoom originating from that point. The point won't move. It has nothing to do with canvas center or visual center of the viewport.",
   "file": 2
  },
  {
   "section": "default",
   "name": "new Circle",
   "hash": "#Circle",
   "desc": "Circle class",
   "file": 3
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by",
   "file": 3
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 3
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 3
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 3
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 3
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 3
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 3
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 3
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 3
  },
  {
   "section": "Members",
   "name": "endAngle",
   "hash": "#endAngle",
   "desc": "End angle of the circle probably will change to degrees in next major version",
   "file": 3
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 3
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 3
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 3
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 3
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 3
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 3
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 3
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 3
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 3
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 3
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 3
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 3
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 3
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 3
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 3
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 3
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 3
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 3
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 3
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 3
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 3
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 3
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 3
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 3
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 3
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 3
  },
  {
   "section": "Members",
   "name": "radius",
   "hash": "#radius",
   "desc": "Radius of this circle",
   "file": 3
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 3
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 3
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "startAngle",
   "hash": "#startAngle",
   "desc": "degrees of start of the circle. probably will change to degrees in next major version",
   "file": 3
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 3
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 3
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 3
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 3
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 3
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 3
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 3
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 3
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 3
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 3
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getRadiusX",
   "hash": "#getRadiusX",
   "desc": "Returns horizontal radius of an object (according to how an object is scaled)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getRadiusY",
   "hash": "#getRadiusY",
   "desc": "Returns vertical radius of an object (according to how an object is scaled)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setRadius",
   "hash": "#setRadius",
   "desc": "Sets radius of an object (and updates width accordingly)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 3
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 3
  },
  {
   "section": "default",
   "name": "new CircleBrush",
   "hash": "#CircleBrush",
   "desc": "CircleBrush class",
   "file": 4
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width of a brush",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "addPoint",
   "hash": "#addPoint",
   "desc": null,
   "file": 4
  },
  {
   "section": "Methods",
   "name": "drawDot",
   "hash": "#drawDot",
   "desc": "Invoked inside on mouse down and mouse move",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "onMouseDown",
   "hash": "#onMouseDown",
   "desc": "Invoked on mouse down",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "onMouseMove",
   "hash": "#onMouseMove",
   "desc": "Invoked on mouse move",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "onMouseUp",
   "hash": "#onMouseUp",
   "desc": "Invoked on mouse up",
   "file": 4
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#.add",
   "desc": "Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`). in case of Group no changes to bounding box are made. Objects should be instances of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the add method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#.complexity",
   "desc": "Returns number representation of a collection complexity",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "contains",
   "hash": "#.contains",
   "desc": "Returns true if collection contains an object",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "forEachObject",
   "hash": "#.forEachObject",
   "desc": "Executes given function for each object in this group",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "getObjects",
   "hash": "#.getObjects",
   "desc": "Returns an array of children objects of this instance Type parameter introduced in 1.3.10 since 2.3.5 this method return always a COPY of the array;",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "insertAt",
   "hash": "#.insertAt",
   "desc": "Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`) An object should be an instance of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the insertAt method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "isEmpty",
   "hash": "#.isEmpty",
   "desc": "Returns true if collection contains no objects",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "item",
   "hash": "#.item",
   "desc": "Returns object at specified index",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "remove",
   "hash": "#.remove",
   "desc": "Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)",
   "file": 5
  },
  {
   "section": "Methods",
   "name": "size",
   "hash": "#.size",
   "desc": "Returns a size of a collection (i.e: length of an array containing its objects)",
   "file": 5
  },
  {
   "section": "default",
   "name": "new Color",
   "hash": "#Color",
   "desc": "Color class The purpose of",
   "file": 6
  },
  {
   "section": "Members",
   "name": "colorNameMap",
   "hash": "#.colorNameMap",
   "desc": "Map of the 148 color names with HEX code",
   "file": 6
  },
  {
   "section": "Members",
   "name": "reHex",
   "hash": "#.reHex",
   "desc": "Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)",
   "file": 6
  },
  {
   "section": "Members",
   "name": "reHSLa",
   "hash": "#.reHSLa",
   "desc": "Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))",
   "file": 6
  },
  {
   "section": "Members",
   "name": "reRGBa",
   "hash": "#.reRGBa",
   "desc": "Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromHex",
   "hash": "#.fromHex",
   "desc": "Returns new color object, when given a color in HEX format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromHsl",
   "hash": "#.fromHsl",
   "desc": "Returns new color object, when given a color in HSL format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromHsla",
   "hash": "#.fromHsla",
   "desc": "Returns new color object, when given a color in HSLA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromRgb",
   "hash": "#.fromRgb",
   "desc": "Returns new color object, when given a color in RGB format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromRgba",
   "hash": "#.fromRgba",
   "desc": "Returns new color object, when given a color in RGBA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "fromSource",
   "hash": "#.fromSource",
   "desc": "Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "sourceFromHex",
   "hash": "#.sourceFromHex",
   "desc": "Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "sourceFromHsl",
   "hash": "#.sourceFromHsl",
   "desc": "Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format. Adapted from",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "sourceFromRgb",
   "hash": "#.sourceFromRgb",
   "desc": "Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "getAlpha",
   "hash": "#getAlpha",
   "desc": "Gets value of alpha channel for this color",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "getSource",
   "hash": "#getSource",
   "desc": "Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "overlayWith",
   "hash": "#overlayWith",
   "desc": "Overlays color with another color",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "setAlpha",
   "hash": "#setAlpha",
   "desc": "Sets value of alpha channel for this color",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "setSource",
   "hash": "#setSource",
   "desc": "Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toBlackWhite",
   "hash": "#toBlackWhite",
   "desc": "Transforms color to its black and white representation",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toGrayscale",
   "hash": "#toGrayscale",
   "desc": "Transforms color to its grayscale representation",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toHex",
   "hash": "#toHex",
   "desc": "Returns color representation in HEX format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toHexa",
   "hash": "#toHexa",
   "desc": "Returns color representation in HEXA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toHsl",
   "hash": "#toHsl",
   "desc": "Returns color representation in HSL format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toHsla",
   "hash": "#toHsla",
   "desc": "Returns color representation in HSLA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toRgb",
   "hash": "#toRgb",
   "desc": "Returns color representation in RGB format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "toRgba",
   "hash": "#toRgba",
   "desc": "Returns color representation in RGBA format",
   "file": 6
  },
  {
   "section": "Methods",
   "name": "_setOptions",
   "hash": "#._setOptions",
   "desc": "Sets object's properties from options",
   "file": 7
  },
  {
   "section": "Methods",
   "name": "get",
   "hash": "#.get",
   "desc": "Basic getter",
   "file": 7
  },
  {
   "section": "Methods",
   "name": "set",
   "hash": "#.set",
   "desc": "Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.",
   "file": 7
  },
  {
   "section": "Methods",
   "name": "toggle",
   "hash": "#.toggle",
   "desc": "Toggles specified property from `true` to `false` or from `false` to `true`",
   "file": 7
  },
  {
   "section": "default",
   "name": "new Ellipse",
   "hash": "#Ellipse",
   "desc": "Ellipse class",
   "file": 8
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by",
   "file": 8
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 8
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 8
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 8
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 8
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 8
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 8
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 8
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 8
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 8
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 8
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 8
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 8
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 8
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 8
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 8
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 8
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 8
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 8
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 8
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 8
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 8
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 8
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 8
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 8
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 8
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 8
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 8
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 8
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 8
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 8
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 8
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 8
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 8
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 8
  },
  {
   "section": "Members",
   "name": "rx",
   "hash": "#rx",
   "desc": "Horizontal radius",
   "file": 8
  },
  {
   "section": "Members",
   "name": "ry",
   "hash": "#ry",
   "desc": "Vertical radius",
   "file": 8
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 8
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 8
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 8
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 8
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 8
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 8
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 8
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 8
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 8
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 8
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 8
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 8
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getRx",
   "hash": "#getRx",
   "desc": "Returns horizontal radius of an object (according to how an object is scaled)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getRy",
   "hash": "#getRy",
   "desc": "Returns Vertical radius of an object (according to how an object is scaled)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 8
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 8
  },
  {
   "section": "default",
   "name": "new Gradient",
   "hash": "#Gradient",
   "desc": "Gradient class",
   "file": 9
  },
  {
   "section": "Members",
   "name": "gradientTransform",
   "hash": "#gradientTransform",
   "desc": "A transform matrix to apply to the gradient before painting. Imported from svg gradients, is not applied with the current transform in the center. Before this transform is applied, the origin point is at the top left corner of the object plus the addition of offsetY and offsetX.",
   "file": 9
  },
  {
   "section": "Members",
   "name": "gradientUnits",
   "hash": "#gradientUnits",
   "desc": "coordinates units for coords. If `pixels`, the number of coords are in the same unit of width / height. If set as `percentage` the coords are still a number, but 1 means 100% of width for the X and 100% of the height for the y. It can be bigger than 1 and negative. allowed values pixels or percentage.",
   "file": 9
  },
  {
   "section": "Members",
   "name": "offsetX",
   "hash": "#offsetX",
   "desc": "Horizontal offset for aligning gradients coming from SVG when outside pathgroups",
   "file": 9
  },
  {
   "section": "Members",
   "name": "offsetY",
   "hash": "#offsetY",
   "desc": "Vertical offset for aligning gradients coming from SVG when outside pathgroups",
   "file": 9
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Gradient type linear or radial",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "addColorStop",
   "hash": "#addColorStop",
   "desc": "Adds another colorStop",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "toLive",
   "hash": "#toLive",
   "desc": "Returns an instance of CanvasGradient",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of a gradient",
   "file": 9
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns SVG representation of an gradient",
   "file": 9
  },
  {
   "section": "default",
   "name": "new Group",
   "hash": "#Group",
   "desc": "Group class",
   "file": 10
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 10
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 10
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 10
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 10
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "Groups are container, do not render anything on theyr own, ence no cache properties",
   "file": 10
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 10
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 10
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 10
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 10
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 10
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 10
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 10
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 10
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 10
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 10
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 10
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 10
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 10
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 10
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 10
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 10
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 10
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 10
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 10
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 10
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 10
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 10
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 10
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 10
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 10
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 10
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 10
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 10
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 10
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 10
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 10
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 10
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 10
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of stroke",
   "file": 10
  },
  {
   "section": "Members",
   "name": "subTargetCheck",
   "hash": "#subTargetCheck",
   "desc": "Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets",
   "file": 10
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 10
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 10
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 10
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 10
  },
  {
   "section": "Members",
   "name": "useSetOnGroup",
   "hash": "#useSetOnGroup",
   "desc": "setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still available setting this boolean to true.",
   "file": 10
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 10
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#add",
   "desc": "Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`). in case of Group no changes to bounding box are made. Objects should be instances of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the add method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "addWithUpdate",
   "hash": "#addWithUpdate",
   "desc": "Adds an object to a group; Then recalculates group's dimension, position.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 10
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns number representation of a collection complexity",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "contains",
   "hash": "#contains",
   "desc": "Returns true if collection contains an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "destroy",
   "hash": "#destroy",
   "desc": "Destroys a group (restoring state of its objects)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "forEachObject",
   "hash": "#forEachObject",
   "desc": "Executes given function for each object in this group",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getObjects",
   "hash": "#getObjects",
   "desc": "Returns an array of children objects of this instance Type parameter introduced in 1.3.10 since 2.3.5 this method return always a COPY of the array;",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export, specific version for group",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "insertAt",
   "hash": "#insertAt",
   "desc": "Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`) An object should be an instance of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the insertAt method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isEmpty",
   "hash": "#isEmpty",
   "desc": "Returns true if collection contains no objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isOnACache",
   "hash": "#isOnACache",
   "desc": "Check if this group or its parent group are caching, recursively up",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "item",
   "hash": "#item",
   "desc": "Returns object at specified index",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "remove",
   "hash": "#remove",
   "desc": "Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "removeWithUpdate",
   "hash": "#removeWithUpdate",
   "desc": "Removes an object from a group; Then recalculates group's dimension, position.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders instance on a given context",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setObjectsCoords",
   "hash": "#setObjectsCoords",
   "desc": "Sets coordinates of all objects inside group",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group is already cached.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "size",
   "hash": "#size",
   "desc": "Returns a size of a collection (i.e: length of an array containing its objects)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toActiveSelection",
   "hash": "#toActiveSelection",
   "desc": "make a group an active selection, remove the group from canvas the group has to be on canvas for this to work.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns object representation of an instance, in dataless mode.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string represenation of a group",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "ungroupOnCanvas",
   "hash": "#ungroupOnCanvas",
   "desc": "Destroys a group (restoring state of its objects)",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 10
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow",
   "file": 10
  },
  {
   "section": "default",
   "name": "new IText",
   "hash": "#IText",
   "desc": "IText class (introduced in",
   "file": 11
  },
  {
   "section": "Members",
   "name": "__charBounds",
   "hash": "#__charBounds",
   "desc": "contains characters bounding boxes",
   "file": 11
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "_fontSizeMult",
   "hash": "#_fontSizeMult",
   "desc": "Text Line proportion to font Size (in pixels)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "_measuringContext",
   "hash": "#_measuringContext",
   "desc": "Reference to a context to measure text char or couple of chars the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every text object created.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "_styleProperties",
   "hash": "#_styleProperties",
   "desc": "Array of properties that define a style unit (of 'styles').",
   "file": 11
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 11
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 11
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 11
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh",
   "file": 11
  },
  {
   "section": "Members",
   "name": "caching",
   "hash": "#caching",
   "desc": "Indicates whether internal text char widths can be cached",
   "file": 11
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "charSpacing",
   "hash": "#charSpacing",
   "desc": "additional space between characters expressed in thousands of em unit",
   "file": 11
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 11
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 11
  },
  {
   "section": "Members",
   "name": "ctrlKeysMapDown",
   "hash": "#ctrlKeysMapDown",
   "desc": "For functionalities on keyDown + ctrl || cmd",
   "file": 11
  },
  {
   "section": "Members",
   "name": "ctrlKeysMapUp",
   "hash": "#ctrlKeysMapUp",
   "desc": "For functionalities on keyUp + ctrl || cmd",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cursorColor",
   "hash": "#cursorColor",
   "desc": "Color of text cursor color in editing mode. if not set (default) will take color from the text. if set to a color value that fabric can understand, it will be used instead of the color of the text at the current position.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cursorDelay",
   "hash": "#cursorDelay",
   "desc": "Delay between cursor blink (in ms)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cursorDuration",
   "hash": "#cursorDuration",
   "desc": "Duration of cursor fadein (in ms)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "cursorWidth",
   "hash": "#cursorWidth",
   "desc": "Width of cursor (in px)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "deltaY",
   "hash": "#deltaY",
   "desc": "Baseline shift, styles only, keep at 0 for the main text object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "direction",
   "hash": "#direction",
   "desc": "WARNING: EXPERIMENTAL. NOT SUPPORTED YET determine the direction of the text. This has to be set manually together with textAlign and originX for proper experience. some interesting link for the future https://www.w3.org/International/questions/qa-bidi-unicode-controls",
   "file": 11
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "editable",
   "hash": "#editable",
   "desc": "Indicates whether a text can be edited",
   "file": 11
  },
  {
   "section": "Members",
   "name": "editingBorderColor",
   "hash": "#editingBorderColor",
   "desc": "Border color of text object while it's in editing mode",
   "file": 11
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 11
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 11
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 11
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fontFamily",
   "hash": "#fontFamily",
   "desc": "Font family",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fontSize",
   "hash": "#fontSize",
   "desc": "Font size (in pixels)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fontStyle",
   "hash": "#fontStyle",
   "desc": "Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".",
   "file": 11
  },
  {
   "section": "Members",
   "name": "fontWeight",
   "hash": "#fontWeight",
   "desc": "Font weight (e.g. bold, normal, 400, 600, 800)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 11
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 11
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 11
  },
  {
   "section": "Members",
   "name": "hiddenTextareaContainer",
   "hash": "#hiddenTextareaContainer",
   "desc": "DOM container to append the hiddenTextarea. An alternative to attaching to the document.body. Useful to reduce laggish redraw of the full document.body tree and also with modals event capturing that won't let the textarea take focus.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 11
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 11
  },
  {
   "section": "Members",
   "name": "inCompositionMode",
   "hash": "#inCompositionMode",
   "desc": "Helps determining when the text is in composition, so that the cursor rendering is altered.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "isEditing",
   "hash": "#isEditing",
   "desc": "Indicates whether text is in editing mode",
   "file": 11
  },
  {
   "section": "Members",
   "name": "keysMap",
   "hash": "#keysMap",
   "desc": "For functionalities on keyDown Map a special key to a function of the instance/prototype If you need different behaviour for ESC or TAB or arrows, you have to change this map setting the name of a function that you build on the fabric.Itext or your prototype. the map change will affect all Instances unless you need for only some text Instances in that case you have to clone this object and assign your Instance. this.keysMap = fabric.util.object.clone(this.keysMap); The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]",
   "file": 11
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lineHeight",
   "hash": "#lineHeight",
   "desc": "Line height",
   "file": 11
  },
  {
   "section": "Members",
   "name": "linethrough",
   "hash": "#linethrough",
   "desc": "Text decoration linethrough.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 11
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 11
  },
  {
   "section": "Members",
   "name": "MIN_TEXT_WIDTH",
   "hash": "#MIN_TEXT_WIDTH",
   "desc": "contains the min text width to avoid getting 0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 11
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 11
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 11
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 11
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 11
  },
  {
   "section": "Members",
   "name": "overline",
   "hash": "#overline",
   "desc": "Text decoration overline.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 11
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 11
  },
  {
   "section": "Members",
   "name": "path",
   "hash": "#path",
   "desc": "fabric.Path that the text should follow. since 4.6.0 the path will be drawn automatically. if you want to make the path visible, give it a stroke and strokeWidth or fill value if you want it to be hidden, assign visible = false to the path. This feature is in BETA, and SVG import/export is not yet supported.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "pathAlign",
   "hash": "#pathAlign",
   "desc": "How text is aligned to the path. This property determines the perpendicular position of each character relative to the path. (one of \"baseline\", \"center\", \"ascender\", \"descender\") This feature is in BETA, and its behavior may change",
   "file": 11
  },
  {
   "section": "Members",
   "name": "pathSide",
   "hash": "#pathSide",
   "desc": "Which side of the path the text should be drawn on. Only used when text has a path",
   "file": 11
  },
  {
   "section": "Members",
   "name": "pathStartOffset",
   "hash": "#pathStartOffset",
   "desc": "Offset amount for text path starting position Only used when text has a path",
   "file": 11
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 11
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "selectionColor",
   "hash": "#selectionColor",
   "desc": "Color of text selection",
   "file": 11
  },
  {
   "section": "Members",
   "name": "selectionEnd",
   "hash": "#selectionEnd",
   "desc": "Index where text selection ends",
   "file": 11
  },
  {
   "section": "Members",
   "name": "selectionStart",
   "hash": "#selectionStart",
   "desc": "Index where text selection starts (or where cursor is when there is no selection)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 11
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (",
   "file": 11
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 11
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "styles",
   "hash": "#styles",
   "desc": "Object containing character styles - top-level properties -> line numbers, 2nd-level properties - character numbers",
   "file": 11
  },
  {
   "section": "Members",
   "name": "subscript",
   "hash": "#subscript",
   "desc": "Subscript schema object (minimum overlap)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "superscript",
   "hash": "#superscript",
   "desc": "Superscript schema object (minimum overlap)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "textAlign",
   "hash": "#textAlign",
   "desc": "Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\", \"justify-left\", \"justify-center\" or \"justify-right\".",
   "file": 11
  },
  {
   "section": "Members",
   "name": "textBackgroundColor",
   "hash": "#textBackgroundColor",
   "desc": "Background color of text lines",
   "file": 11
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 11
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 11
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 11
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 11
  },
  {
   "section": "Members",
   "name": "underline",
   "hash": "#underline",
   "desc": "Text decoration underline.",
   "file": 11
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 11
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.IText instance from an object representation",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_getFontDeclaration",
   "hash": "#_getFontDeclaration",
   "desc": "return font declaration string for canvas context",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_getSelectionForOffset",
   "hash": "#_getSelectionForOffset",
   "desc": "private Helps finding if the offset should be counted from Start or End",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_getStyleDeclaration",
   "hash": "#_getStyleDeclaration",
   "desc": "get the reference, not a clone, of the style object for a given character",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_measureLine",
   "hash": "#_measureLine",
   "desc": "measure every grapheme of a line, populating __charBounds",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_mouseDownHandler",
   "hash": "#_mouseDownHandler",
   "desc": "Default event handler for the basic functionalities needed on _mouseDown can be overridden to do something different. Scope of this implementation is: find the click position, set selectionStart find selectionEnd, initialize the drawing of either cursor or selection area initializing a mousedDown on a text area will cancel fabricjs knowledge of current compositionMode. It will be set to false.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_mouseDownHandlerBefore",
   "hash": "#_mouseDownHandlerBefore",
   "desc": "Default event handler for the basic functionalities needed on mousedown:before can be overridden to do something different. Scope of this implementation is: verify the object is already selected when mousing down",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_moveCursorLeftOrRight",
   "hash": "#_moveCursorLeftOrRight",
   "desc": "Moves cursor right or Left, fires event",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_moveCursorUpOrDown",
   "hash": "#_moveCursorUpOrDown",
   "desc": "Moves cursor up or down, fires the events",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_splitTextIntoLines",
   "hash": "#_splitTextIntoLines",
   "desc": "Returns the text as an array of lines.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns SVG representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "abortCursorAnimation",
   "hash": "#abortCursorAnimation",
   "desc": "Aborts cursor animation and clears all timeouts",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 11
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "calcTextHeight",
   "hash": "#calcTextHeight",
   "desc": "Calculate text box height",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "cleanStyle",
   "hash": "#cleanStyle",
   "desc": "Check if characters in a text have a value for a property whose value matches the textbox's value for that property.  If so, the character-level property is deleted.  If the character has no other properties, then it is also deleted.  Finally, if the line containing that character has no other characters then it also is deleted.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "clearContextTop",
   "hash": "#clearContextTop",
   "desc": "Prepare and clean the contextTop",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "copy",
   "hash": "#copy",
   "desc": "Copies selected text",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "doubleClickHandler",
   "hash": "#doubleClickHandler",
   "desc": "Default handler for double click, select a word",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "enlargeSpaces",
   "hash": "#enlargeSpaces",
   "desc": "Enlarge space boxes and shift the others",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "enterEditing",
   "hash": "#enterEditing",
   "desc": "Enters editing state",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "exitEditing",
   "hash": "#exitEditing",
   "desc": "Exits from editing state",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "findLineBoundaryLeft",
   "hash": "#findLineBoundaryLeft",
   "desc": "Find new selection index representing start of current line according to current selection index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "findLineBoundaryRight",
   "hash": "#findLineBoundaryRight",
   "desc": "Find new selection index representing end of current line according to current selection index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "findWordBoundaryLeft",
   "hash": "#findWordBoundaryLeft",
   "desc": "Find new selection index representing start of current word according to current selection index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "findWordBoundaryRight",
   "hash": "#findWordBoundaryRight",
   "desc": "Find new selection index representing end of current word according to current selection index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "fire",
   "hash": "#fire",
   "desc": "Fires event with an optional options object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "fromGraphemeToStringSelection",
   "hash": "#fromGraphemeToStringSelection",
   "desc": "convert from fabric to textarea values",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "fromStringToGraphemeSelection",
   "hash": "#fromStringToGraphemeSelection",
   "desc": "convert from textarea to grapheme indexes",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "get2DCursorLocation",
   "hash": "#get2DCursorLocation",
   "desc": "Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getCompleteStyleDeclaration",
   "hash": "#getCompleteStyleDeclaration",
   "desc": "return a new object that contains all the style property for a character the object returned is newly created",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getCurrentCharColor",
   "hash": "#getCurrentCharColor",
   "desc": "High level function to know the color of the cursor. the currentChar is the one that precedes the cursor Returns color (fill) of char at the current cursor if the text object has a pattern or gradient for filler, it will return that. Unused by the library, is for the end user",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getCurrentCharFontSize",
   "hash": "#getCurrentCharFontSize",
   "desc": "High level function to know the height of the cursor. the currentChar is the one that precedes the cursor Returns fontSize of char at the current cursor Unused from the library, is for the end user",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getDownCursorOffset",
   "hash": "#getDownCursorOffset",
   "desc": "Gets start offset of a selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getHeightOfChar",
   "hash": "#getHeightOfChar",
   "desc": "Computes height of character at given position",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getHeightOfLine",
   "hash": "#getHeightOfLine",
   "desc": "Calculate height of line at 'lineIndex'",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSelectedText",
   "hash": "#getSelectedText",
   "desc": "Returns selected text",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSelectionStartFromPointer",
   "hash": "#getSelectionStartFromPointer",
   "desc": "Returns index of a character corresponding to where an object was clicked",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSelectionStyles",
   "hash": "#getSelectionStyles",
   "desc": "Gets style of a current selection/cursor (at the start position) if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getUpCursorOffset",
   "hash": "#getUpCursorOffset",
   "desc": null,
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getValueOfPropertyAt",
   "hash": "#getValueOfPropertyAt",
   "desc": "Retrieves the value of property at given character position",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initAddedHandler",
   "hash": "#initAddedHandler",
   "desc": "Initializes \"added\" event handler",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initBehavior",
   "hash": "#initBehavior",
   "desc": "Initializes all the interactive behavior of IText",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initClicks",
   "hash": "#initClicks",
   "desc": "Initializes double and triple click event handlers",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initCursorSelectionHandlers",
   "hash": "#initCursorSelectionHandlers",
   "desc": "Initializes event handlers related to cursor or selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initDelayedCursor",
   "hash": "#initDelayedCursor",
   "desc": "Initializes delayed cursor",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initDoubleClickSimulation",
   "hash": "#initDoubleClickSimulation",
   "desc": "Initializes \"dbclick\" event handler",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initHiddenTextarea",
   "hash": "#initHiddenTextarea",
   "desc": "Initializes hidden textarea (needed to bring up keyboard in iOS)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initMousedownHandler",
   "hash": "#initMousedownHandler",
   "desc": "Initializes \"mousedown\" event handler",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initMouseMoveHandler",
   "hash": "#initMouseMoveHandler",
   "desc": "Initializes \"mousemove\" event handler",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "initMouseupHandler",
   "hash": "#initMouseupHandler",
   "desc": "Initializes \"mouseup\" event handler",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "insertChars",
   "hash": "#insertChars",
   "desc": "insert characters at start position, before start position. start  equal 1 it means the text get inserted between actual grapheme 0 and 1 if style array is provided, it must be as the same length of text in graphemes if end is provided and is bigger than start, old text is replaced. start/end ar per grapheme position in _text array.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "insertCharStyleObject",
   "hash": "#insertCharStyleObject",
   "desc": "Inserts style object for a given line/char index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "insertNewlineStyleObject",
   "hash": "#insertNewlineStyleObject",
   "desc": "Handle insertion of more consecutive style lines for when one or more newlines gets added to the text. Since current style needs to be shifted first we shift the current style of the number lines needed, then we add new lines from the last to the first.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "insertNewStyleBlock",
   "hash": "#insertNewStyleBlock",
   "desc": "Inserts style object(s)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isEmptyStyles",
   "hash": "#isEmptyStyles",
   "desc": "Returns true if object has no styling or no styling in a line",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isEndOfWrapping",
   "hash": "#isEndOfWrapping",
   "desc": "Detect if the text line is ended with an hard break text and itext do not have wrapping, return false",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "measureLine",
   "hash": "#measureLine",
   "desc": "measure a text line measuring all characters.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "missingNewlineOffset",
   "hash": "#missingNewlineOffset",
   "desc": "Detect if a line has a linebreak and so we need to account for it when moving and counting style. It return always for text and Itext.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorDown",
   "hash": "#moveCursorDown",
   "desc": "Moves cursor down",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorLeft",
   "hash": "#moveCursorLeft",
   "desc": "Moves cursor left",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorLeftWithoutShift",
   "hash": "#moveCursorLeftWithoutShift",
   "desc": "Moves cursor left without keeping selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorLeftWithShift",
   "hash": "#moveCursorLeftWithShift",
   "desc": "Moves cursor left while keeping selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorRight",
   "hash": "#moveCursorRight",
   "desc": "Moves cursor right",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorRightWithoutShift",
   "hash": "#moveCursorRightWithoutShift",
   "desc": "Moves cursor right without keeping selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorRightWithShift",
   "hash": "#moveCursorRightWithShift",
   "desc": "Moves cursor right while keeping selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorUp",
   "hash": "#moveCursorUp",
   "desc": "Moves cursor up",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorWithoutShift",
   "hash": "#moveCursorWithoutShift",
   "desc": "Moves cursor up without shift",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveCursorWithShift",
   "hash": "#moveCursorWithShift",
   "desc": "Moves cursor with shift",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onCompositionEnd",
   "hash": "#onCompositionEnd",
   "desc": "Composition end",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onCompositionStart",
   "hash": "#onCompositionStart",
   "desc": "Composition start",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onInput",
   "hash": "#onInput",
   "desc": "Handles onInput event",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onKeyDown",
   "hash": "#onKeyDown",
   "desc": "Handles keydown event only used for arrows and combination of modifier keys.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onKeyUp",
   "hash": "#onKeyUp",
   "desc": "Handles keyup event We handle KeyUp because ie11 and edge have difficulties copy/pasting if a copy/cut event fired, keyup is dismissed",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "paste",
   "hash": "#paste",
   "desc": "Pastes text",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "removeChars",
   "hash": "#removeChars",
   "desc": "Removes characters from start/end start/end ar per grapheme position in _text array.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "removeStyle",
   "hash": "#removeStyle",
   "desc": "Remove a style property or properties from all individual character styles in a text object.  Deletes the character style object if it contains no other style props.  Deletes a line style object if it contains no other character styles.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "removeStyleFromTo",
   "hash": "#removeStyleFromTo",
   "desc": "remove and reflow a style block from start to end.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "renderCursor",
   "hash": "#renderCursor",
   "desc": "Renders cursor",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "renderCursorOrSelection",
   "hash": "#renderCursorOrSelection",
   "desc": "Renders cursor or selection (depending on what exists) it does on the contextTop. If contextTop is not available, do nothing.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "renderSelection",
   "hash": "#renderSelection",
   "desc": "Renders text selection",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "searchWordBoundary",
   "hash": "#searchWordBoundary",
   "desc": "Finds index corresponding to beginning or end of a word",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "selectAll",
   "hash": "#selectAll",
   "desc": "Selects entire text",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "selectLine",
   "hash": "#selectLine",
   "desc": "Selects a line based on the index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "selectWord",
   "hash": "#selectWord",
   "desc": "Selects a word based on the index",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "set",
   "hash": "#set",
   "desc": "Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setCursorByClick",
   "hash": "#setCursorByClick",
   "desc": "Changes cursor location in a text depending on passed pointer (x/y) object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setPathInfo",
   "hash": "#setPathInfo",
   "desc": "If text has a path, it will add the extra information needed for path and text calculations",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSelectionEnd",
   "hash": "#setSelectionEnd",
   "desc": "Sets selection end (right boundary of a selection)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSelectionStart",
   "hash": "#setSelectionStart",
   "desc": "Sets selection start (left boundary of a selection)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSelectionStartEndWithShift",
   "hash": "#setSelectionStartEndWithShift",
   "desc": "Set the selectionStart and selectionEnd according to the new position of cursor mimic the key - mouse navigation when shift is pressed.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSelectionStyles",
   "hash": "#setSelectionStyles",
   "desc": "Sets style of a current selection, if no selection exist, do not set anything.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSubscript",
   "hash": "#setSubscript",
   "desc": "Turns the character into an 'inferior figure' (i.e. 'subscript')",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setSuperscript",
   "hash": "#setSuperscript",
   "desc": "Turns the character into a 'superior figure' (i.e. 'superscript')",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "shiftLineStyles",
   "hash": "#shiftLineStyles",
   "desc": "Shifts line styles up or down",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "styleHas",
   "hash": "#styleHas",
   "desc": "Returns true if object has a style property or has it ina specified line This function is used to detect if a text will use a particular property or not.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "tripleClickHandler",
   "hash": "#tripleClickHandler",
   "desc": "Default handler for triple click, select a line",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 11
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 11
  },
  {
   "section": "default",
   "name": "new BaseFilter",
   "hash": "#BaseFilter",
   "desc": "Root filter class from which all filter classes inherit from",
   "file": 12
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return a map of uniform names to WebGLUniformLocation objects.  Intended to be overridden by subclasses.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send uniform data from this filter to its shader program on the GPU.  Intended to be overridden by subclasses.",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 12
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 12
  },
  {
   "section": "default",
   "name": "new Blur",
   "hash": "#Blur",
   "desc": "Blur filter class",
   "file": 13
  },
  {
   "section": "Members",
   "name": "blur",
   "hash": "#blur",
   "desc": "blur value, in percentage of image dimensions. specific to keep the image blur constant at different resolutions range between 0 and 1.",
   "file": 13
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "chooseRightDelta",
   "hash": "#chooseRightDelta",
   "desc": "choose right value of image percentage to blur with",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 13
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 13
  },
  {
   "section": "default",
   "name": "new Brightness",
   "hash": "#Brightness",
   "desc": "Brightness filter class",
   "file": 14
  },
  {
   "section": "Members",
   "name": "brightness",
   "hash": "#brightness",
   "desc": "Brightness value, from -1 to 1. translated to -255 to 255 for 2d 0.0039215686 is the part of 1 that get translated to 1 in 2d",
   "file": 14
  },
  {
   "section": "Members",
   "name": "fragmentSource",
   "hash": "#fragmentSource",
   "desc": "Fragment source for the brightness program",
   "file": 14
  },
  {
   "section": "Members",
   "name": "mainParameter",
   "hash": "#mainParameter",
   "desc": "Describe the property that is the filter parameter",
   "file": 14
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 14
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 14
  },
  {
   "section": "default",
   "name": "new ColorMatrix",
   "hash": "#ColorMatrix",
   "desc": "Color Matrix filter class",
   "file": 15
  },
  {
   "section": "Members",
   "name": "colorsOnly",
   "hash": "#colorsOnly",
   "desc": "Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario to save some calculation",
   "file": 15
  },
  {
   "section": "Members",
   "name": "matrix",
   "hash": "#matrix",
   "desc": "Colormatrix for pixels. array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning outside the -1, 1 range. 0.0039215686 is the part of 1 that get translated to 1 in 2d",
   "file": 15
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 15
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 15
  },
  {
   "section": "default",
   "name": "new Contrast",
   "hash": "#Contrast",
   "desc": "Contrast filter class",
   "file": 16
  },
  {
   "section": "Members",
   "name": "contrast",
   "hash": "#contrast",
   "desc": "contrast value, range from -1 to 1.",
   "file": 16
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Contrast operation to a Uint8Array representing the pixels of an image.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 16
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 16
  },
  {
   "section": "default",
   "name": "new Convolute",
   "hash": "#Convolute",
   "desc": "Adapted from",
   "file": 17
  },
  {
   "section": "Members",
   "name": "fragmentSource",
   "hash": "#fragmentSource",
   "desc": "Fragment source for the brightness program",
   "file": 17
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 17
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 17
  },
  {
   "section": "default",
   "name": "new Gamma",
   "hash": "#Gamma",
   "desc": "Gamma filter class",
   "file": 18
  },
  {
   "section": "Members",
   "name": "gamma",
   "hash": "#gamma",
   "desc": "Gamma array value, from 0.01 to 2.2.",
   "file": 18
  },
  {
   "section": "Members",
   "name": "mainParameter",
   "hash": "#mainParameter",
   "desc": "Describe the property that is the filter parameter",
   "file": 18
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Gamma operation to a Uint8Array representing the pixels of an image.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 18
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 18
  },
  {
   "section": "default",
   "name": "new Grayscale",
   "hash": "#Grayscale",
   "desc": "Grayscale image filter class",
   "file": 20
  },
  {
   "section": "Members",
   "name": "mode",
   "hash": "#mode",
   "desc": "Grayscale mode, between 'average', 'lightness', 'luminosity'",
   "file": 20
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Grayscale operation to a Uint8Array representing the pixels of an image.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Grayscale filter isNeutralState implementation The filter is never neutral on the image",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 20
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 20
  },
  {
   "section": "default",
   "name": "new HueRotation",
   "hash": "#HueRotation",
   "desc": "HueRotation filter class",
   "file": 21
  },
  {
   "section": "Members",
   "name": "mainParameter",
   "hash": "#mainParameter",
   "desc": "Describe the property that is the filter parameter",
   "file": 21
  },
  {
   "section": "Members",
   "name": "rotation",
   "hash": "#rotation",
   "desc": "HueRotation value, from -1 to 1. the unit is radians",
   "file": 21
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return a map of uniform names to WebGLUniformLocation objects.  Intended to be overridden by subclasses.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "HueRotation isNeutralState implementation Used only in image applyFilters to discard filters that will not have an effect on the image",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send uniform data from this filter to its shader program on the GPU.  Intended to be overridden by subclasses.",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 21
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 21
  },
  {
   "section": "default",
   "name": "new Invert",
   "hash": "#Invert",
   "desc": "Invert filter class",
   "file": 22
  },
  {
   "section": "Members",
   "name": "invert",
   "hash": "#invert",
   "desc": "Filter invert. if false, does nothing",
   "file": 22
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Invert operation to a Uint8Array representing the pixels of an image.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Invert filter isNeutralState implementation Used only in image applyFilters to discard filters that will not have an effect on the image",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 22
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 22
  },
  {
   "section": "default",
   "name": "new Noise",
   "hash": "#Noise",
   "desc": "Noise filter class",
   "file": 25
  },
  {
   "section": "Members",
   "name": "fragmentSource",
   "hash": "#fragmentSource",
   "desc": "Fragment source for the noise program",
   "file": 25
  },
  {
   "section": "Members",
   "name": "mainParameter",
   "hash": "#mainParameter",
   "desc": "Describe the property that is the filter parameter",
   "file": 25
  },
  {
   "section": "Members",
   "name": "noise",
   "hash": "#noise",
   "desc": "Noise value, from",
   "file": 25
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 25
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 25
  },
  {
   "section": "default",
   "name": "new Pixelate",
   "hash": "#Pixelate",
   "desc": "Pixelate filter class",
   "file": 26
  },
  {
   "section": "Members",
   "name": "fragmentSource",
   "hash": "#fragmentSource",
   "desc": "Fragment source for the Pixelate program",
   "file": 26
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Indicate when the filter is not gonna apply changes to the image",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 26
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 26
  },
  {
   "section": "default",
   "name": "new RemoveColor",
   "hash": "#RemoveColor",
   "desc": "Remove white filter class",
   "file": 27
  },
  {
   "section": "Members",
   "name": "color",
   "hash": "#color",
   "desc": "Color to remove, in any format understood by fabric.Color.",
   "file": 27
  },
  {
   "section": "Members",
   "name": "distance",
   "hash": "#distance",
   "desc": "distance to actual color, as value up or down from each r,g,b between 0 and 1",
   "file": 27
  },
  {
   "section": "Members",
   "name": "fragmentSource",
   "hash": "#fragmentSource",
   "desc": "Fragment source for the brightness program",
   "file": 27
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 27
  },
  {
   "section": "Members",
   "name": "useAlpha",
   "hash": "#useAlpha",
   "desc": "For color to remove inside distance, use alpha channel for a smoother deletion NOT IMPLEMENTED YET",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Applies filter to canvas element",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 27
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 27
  },
  {
   "section": "default",
   "name": "new Resize",
   "hash": "#Resize",
   "desc": "Resize image filter class",
   "file": 29
  },
  {
   "section": "Members",
   "name": "lanczosLobes",
   "hash": "#lanczosLobes",
   "desc": "LanczosLobes parameter for lanczos filter, valid for resizeType lanczos",
   "file": 29
  },
  {
   "section": "Members",
   "name": "resizeType",
   "hash": "#resizeType",
   "desc": "Resize type for webgl resizeType is just lanczos, for canvas2d can be: bilinear, hermite, sliceHack, lanczos.",
   "file": 29
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Scale factor for resizing, x axis",
   "file": 29
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Scale factor for resizing, y axis",
   "file": 29
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply the resize filter to the image Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Applies filter to canvas element",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "bilinearFiltering",
   "hash": "#bilinearFiltering",
   "desc": "bilinearFiltering",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "generateShader",
   "hash": "#generateShader",
   "desc": "Generate vertex and shader sources from the necessary steps numbers",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "hermiteFastResize",
   "hash": "#hermiteFastResize",
   "desc": "hermiteFastResize",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "lanczosResize",
   "hash": "#lanczosResize",
   "desc": "Filter lanczosResize",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "sliceByTwo",
   "hash": "#sliceByTwo",
   "desc": "Filter sliceByTwo",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 29
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 29
  },
  {
   "section": "default",
   "name": "new Saturation",
   "hash": "#Saturation",
   "desc": "Saturate filter class",
   "file": 31
  },
  {
   "section": "Members",
   "name": "saturation",
   "hash": "#saturation",
   "desc": "Saturation value, from -1 to 1. Increases/decreases the color saturation. A value of 0 has no effect.",
   "file": 31
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 31
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 31
  },
  {
   "section": "default",
   "name": "new Vibrance",
   "hash": "#Vibrance",
   "desc": "Vibrance filter class",
   "file": 35
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 35
  },
  {
   "section": "Members",
   "name": "vibrance",
   "hash": "#vibrance",
   "desc": "Vibrance value, from -1 to 1. Increases/decreases the saturation of more muted colors with less effect on saturated colors. A value of 0 has no effect.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "applyTo2d",
   "hash": "#applyTo2d",
   "desc": "Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return WebGL uniform locations for this filter's shader.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send data from this filter to its shader program's uniforms.",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 35
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 35
  },
  {
   "section": "default",
   "name": "new BlendColor",
   "hash": "#BlendColor",
   "desc": "Color Blend filter class",
   "file": 37
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return a map of uniform names to WebGLUniformLocation objects.  Intended to be overridden by subclasses.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send uniform data from this filter to its shader program on the GPU.  Intended to be overridden by subclasses.",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 37
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 37
  },
  {
   "section": "default",
   "name": "new BlendImage",
   "hash": "#BlendImage",
   "desc": "Image Blend filter class",
   "file": 38
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Filter type",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "applyTo",
   "hash": "#applyTo",
   "desc": "Apply this filter to the input image data provided.  Determines whether to use WebGL or Canvas2D based on the options.webgl flag.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "applyToWebGL",
   "hash": "#applyToWebGL",
   "desc": "Apply this filter using webgl.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "createHelpLayer",
   "hash": "#createHelpLayer",
   "desc": "If needed by a 2d filter, this functions can create an helper canvas to be used remember that options.targetCanvas is available for use till end of chain.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "createProgram",
   "hash": "#createProgram",
   "desc": "Compile this filter's shader program.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "getAttributeLocations",
   "hash": "#getAttributeLocations",
   "desc": "Return a map of attribute names to WebGLAttributeLocation objects.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "getUniformLocations",
   "hash": "#getUniformLocations",
   "desc": "Return a map of uniform names to WebGLUniformLocation objects.  Intended to be overridden by subclasses.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "isNeutralState",
   "hash": "#isNeutralState",
   "desc": "Generic isNeutral implementation for one parameter based filters. Used only in image applyFilters to discard filters that will not have an effect on the image Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "retrieveShader",
   "hash": "#retrieveShader",
   "desc": "Retrieves the cached shader.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "sendAttributeData",
   "hash": "#sendAttributeData",
   "desc": "Send attribute data from this filter to its shader program on the GPU.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "sendUniformData",
   "hash": "#sendUniformData",
   "desc": "Send uniform data from this filter to its shader program on the GPU.  Intended to be overridden by subclasses.",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets filter's properties from options",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 38
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 38
  },
  {
   "section": "default",
   "name": "new Image",
   "hash": "#Image",
   "desc": "Image class",
   "file": 40
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by",
   "file": 40
  },
  {
   "section": "Members",
   "name": "CSS_CANVAS",
   "hash": "#.CSS_CANVAS",
   "desc": "Default CSS class name for canvas",
   "file": 40
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "_filterScalingX",
   "hash": "#_filterScalingX",
   "desc": "private contains last value of scaling applied by the apply filter chain",
   "file": 40
  },
  {
   "section": "Members",
   "name": "_filterScalingY",
   "hash": "#_filterScalingY",
   "desc": "private contains last value of scaling applied by the apply filter chain",
   "file": 40
  },
  {
   "section": "Members",
   "name": "_lastScaleX",
   "hash": "#_lastScaleX",
   "desc": "private contains last value of scaleX to detect if the Image got resized after the last Render",
   "file": 40
  },
  {
   "section": "Members",
   "name": "_lastScaleY",
   "hash": "#_lastScaleY",
   "desc": "private contains last value of scaleY to detect if the Image got resized after the last Render",
   "file": 40
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 40
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 40
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 40
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 40
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cacheKey",
   "hash": "#cacheKey",
   "desc": "key used to retrieve the texture representing this image",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 40
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 40
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cropX",
   "hash": "#cropX",
   "desc": "Image crop in pixels from original image size.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "cropY",
   "hash": "#cropY",
   "desc": "Image crop in pixels from original image size.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 40
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 40
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 40
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 40
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 40
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 40
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 40
  },
  {
   "section": "Members",
   "name": "getSvgSrc",
   "hash": "#getSvgSrc",
   "desc": "Alias for getSrc",
   "file": 40
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 40
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 40
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 40
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 40
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 40
  },
  {
   "section": "Members",
   "name": "imageSmoothing",
   "hash": "#imageSmoothing",
   "desc": "Indicates whether this canvas will use image smoothing when painting this image. Also influence if the cacheCanvas for this image uses imageSmoothing",
   "file": 40
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 40
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 40
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 40
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 40
  },
  {
   "section": "Members",
   "name": "minimumScaleTrigger",
   "hash": "#minimumScaleTrigger",
   "desc": "minimum scale factor under which any resizeFilter is triggered to resize the image 0 will disable the automatic resize. 1 will trigger automatically always. number bigger than 1 are not implemented yet.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 40
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 40
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 40
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 40
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 40
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 40
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 40
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 40
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 40
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 40
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 40
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 40
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "srcFromAttribute",
   "hash": "#srcFromAttribute",
   "desc": "When calling fabric.Image.getSrc, return value from element src with `element.getAttribute('src')`. This allows for relative urls as image src.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 40
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (",
   "file": 40
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 40
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke. For image quality a stroke multiple of 2 gives better results.",
   "file": 40
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 40
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 40
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 40
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 40
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 40
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Creates an instance of fabric.Image from its object representation",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "fromURL",
   "hash": "#.fromURL",
   "desc": "Creates an instance of fabric.Image from an URL string",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 40
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "Delete textures, reference to elements and eventually JSDOM cleanup",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context. it will set the imageSmoothing for the draw operation",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getCrossOrigin",
   "hash": "#getCrossOrigin",
   "desc": "Get the crossOrigin value (of the corresponding image element)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getElement",
   "hash": "#getElement",
   "desc": "Returns image element which this instance if based on",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getOriginalSize",
   "hash": "#getOriginalSize",
   "desc": "Returns original size of an image",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSrc",
   "hash": "#getSrc",
   "desc": "Returns source of an image",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "hasCrop",
   "hash": "#hasCrop",
   "desc": "Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor Image can be initialized with any canvas drawable or a string. The string should be a url and will be loaded as an image. Canvas and Image element work out of the box, while videos require extra code to work. Please check video element events for seeking.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "removeTexture",
   "hash": "#removeTexture",
   "desc": "Delete a single texture if in webgl mode",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setElement",
   "hash": "#setElement",
   "desc": "Sets image element for this instance to a specified one. If filters defined they are applied to new image. You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setSrc",
   "hash": "#setSrc",
   "desc": "Sets source of an image",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. This is the special image version where we would like to avoid caching where possible. Essentially images do not benefit from caching. They may require caching, and in that case we do it. Also caching an image usually ends in a loss of details. A full performance audit should be done.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 40
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 40
  },
  {
   "section": "default",
   "name": "new Intersection",
   "hash": "#Intersection",
   "desc": "Intersection class",
   "file": 41
  },
  {
   "section": "Methods",
   "name": "appendPoint",
   "hash": "#appendPoint",
   "desc": "Appends a point to intersection",
   "file": 41
  },
  {
   "section": "Methods",
   "name": "appendPoints",
   "hash": "#appendPoints",
   "desc": "Appends points to intersection",
   "file": 41
  },
  {
   "section": "default",
   "name": "new Line",
   "hash": "#Line",
   "desc": "Line class",
   "file": 42
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by",
   "file": 42
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 42
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 42
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 42
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 42
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 42
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 42
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 42
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 42
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 42
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 42
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 42
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 42
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 42
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 42
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 42
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 42
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 42
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 42
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 42
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 42
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 42
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 42
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 42
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 42
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 42
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 42
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 42
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 42
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 42
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 42
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 42
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 42
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 42
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 42
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 42
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 42
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 42
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 42
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 42
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 42
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 42
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 42
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 42
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 42
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 42
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 42
  },
  {
   "section": "Members",
   "name": "x1",
   "hash": "#x1",
   "desc": "x value or first line edge",
   "file": 42
  },
  {
   "section": "Members",
   "name": "x2",
   "hash": "#x2",
   "desc": "x value or second line edge",
   "file": 42
  },
  {
   "section": "Members",
   "name": "y1",
   "hash": "#y1",
   "desc": "y value or first line edge",
   "file": 42
  },
  {
   "section": "Members",
   "name": "y2",
   "hash": "#y2",
   "desc": "y value or second line edge",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns fabric.Line instance from an SVG element",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.Line instance from an object representation",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 42
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns an object representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 42
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 42
  },
  {
   "section": "default",
   "name": "new Object",
   "hash": "#Object",
   "desc": "Root object class from which all 2d shape classes inherit from",
   "file": 43
  },
  {
   "section": "Members",
   "name": "__uid",
   "hash": "#.__uid",
   "desc": "Unique id used internally when creating SVG elements",
   "file": 43
  },
  {
   "section": "Members",
   "name": "ENLIVEN_PROPS",
   "hash": "#.ENLIVEN_PROPS",
   "desc": "Defines which properties should be enlivened from the object passed to fabric.Object._fromObject",
   "file": 43
  },
  {
   "section": "Members",
   "name": "NUM_FRACTION_DIGITS",
   "hash": "#.NUM_FRACTION_DIGITS",
   "desc": "Defines the number of fraction digits to use when serializing object values. You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 43
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 43
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 43
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 43
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 43
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 43
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 43
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 43
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 43
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 43
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 43
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 43
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 43
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 43
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 43
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 43
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 43
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 43
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 43
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 43
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 43
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 43
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 43
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 43
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 43
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 43
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 43
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 43
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 43
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 43
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 43
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 43
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 43
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 43
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 43
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 43
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 43
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 43
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 43
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 43
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 43
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 43
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object (rect, circle, path, etc.). Note that this property is meant to be read-only and not meant to be modified. If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.",
   "file": 43
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 43
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 43
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns an object representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 43
  },
  {
   "section": "Methods",
   "name": "fire",
   "hash": "#.fire",
   "desc": "Fires event with an optional options object",
   "file": 44
  },
  {
   "section": "Methods",
   "name": "off",
   "hash": "#off",
   "desc": "Stops event observing for a particular event handler. Calling this method without arguments removes all handlers for all events",
   "file": 44
  },
  {
   "section": "Methods",
   "name": "on",
   "hash": "#on",
   "desc": "Observes specified event",
   "file": 44
  },
  {
   "section": "default",
   "name": "new Path",
   "hash": "#Path",
   "desc": "Path class",
   "file": 45
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 45
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 45
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 45
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 45
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 45
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 45
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 45
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 45
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 45
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 45
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 45
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 45
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 45
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 45
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 45
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 45
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 45
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 45
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 45
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 45
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 45
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 45
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 45
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 45
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 45
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 45
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 45
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 45
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 45
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 45
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 45
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 45
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 45
  },
  {
   "section": "Members",
   "name": "path",
   "hash": "#path",
   "desc": "Array of path points",
   "file": 45
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 45
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 45
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 45
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 45
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 45
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 45
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 45
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 45
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 45
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 45
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 45
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 45
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Creates an instance of fabric.Path from an SVG",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Creates an instance of fabric.Path from an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 45
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns number representation of an instance complexity",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns dataless object representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 45
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 45
  },
  {
   "section": "default",
   "name": "new Pattern",
   "hash": "#Pattern",
   "desc": "Pattern class",
   "file": 47
  },
  {
   "section": "Members",
   "name": "crossOrigin",
   "hash": "#crossOrigin",
   "desc": "crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")",
   "file": 47
  },
  {
   "section": "Members",
   "name": "offsetX",
   "hash": "#offsetX",
   "desc": "Pattern horizontal offset from object's left/top corner",
   "file": 47
  },
  {
   "section": "Members",
   "name": "offsetY",
   "hash": "#offsetY",
   "desc": "Pattern vertical offset from object's left/top corner",
   "file": 47
  },
  {
   "section": "Members",
   "name": "patternTransform",
   "hash": "#patternTransform",
   "desc": "transform matrix to change the pattern, imported from svgs.",
   "file": 47
  },
  {
   "section": "Members",
   "name": "repeat",
   "hash": "#repeat",
   "desc": "Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)",
   "file": 47
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 47
  },
  {
   "section": "Methods",
   "name": "toLive",
   "hash": "#toLive",
   "desc": "Returns an instance of CanvasPattern",
   "file": 47
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of a pattern",
   "file": 47
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns SVG representation of a pattern",
   "file": 47
  },
  {
   "section": "default",
   "name": "new PatternBrush",
   "hash": "#PatternBrush",
   "desc": "PatternBrush class",
   "file": 48
  },
  {
   "section": "Members",
   "name": "color",
   "hash": "#color",
   "desc": "Color of a brush",
   "file": 48
  },
  {
   "section": "Members",
   "name": "limitedToCanvasSize",
   "hash": "#limitedToCanvasSize",
   "desc": "When `true`, the free drawing is limited to the whiteboard size. Default to false.",
   "file": 48
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 48
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Stroke Dash Array.",
   "file": 48
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of a brush (one of \"butt\", \"round\", \"square\")",
   "file": 48
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of a brush (one of \"bevel\", \"round\", \"miter\")",
   "file": 48
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's",
   "file": 48
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width of a brush, has to be a Number, no string literals",
   "file": 48
  },
  {
   "section": "Methods",
   "name": "_setBrushStyles",
   "hash": "#_setBrushStyles",
   "desc": "Sets brush styles",
   "file": 48
  },
  {
   "section": "Methods",
   "name": "createPath",
   "hash": "#createPath",
   "desc": "Creates path",
   "file": 48
  },
  {
   "section": "Methods",
   "name": "getPattern",
   "hash": "#getPattern",
   "desc": "Creates \"pattern\" instance property",
   "file": 48
  },
  {
   "section": "default",
   "name": "new PencilBrush",
   "hash": "#PencilBrush",
   "desc": "PencilBrush class",
   "file": 49
  },
  {
   "section": "Members",
   "name": "color",
   "hash": "#color",
   "desc": "Color of a brush",
   "file": 49
  },
  {
   "section": "Members",
   "name": "decimate",
   "hash": "#decimate",
   "desc": "Discard points that are less than `decimate` pixel distant from each other",
   "file": 49
  },
  {
   "section": "Members",
   "name": "drawStraightLine",
   "hash": "#drawStraightLine",
   "desc": "Draws a straight line between last recorded point to current pointer Used for `shift` functionality",
   "file": 49
  },
  {
   "section": "Members",
   "name": "limitedToCanvasSize",
   "hash": "#limitedToCanvasSize",
   "desc": "When `true`, the free drawing is limited to the whiteboard size. Default to false.",
   "file": 49
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 49
  },
  {
   "section": "Members",
   "name": "straightLineKey",
   "hash": "#straightLineKey",
   "desc": "The event modifier key that makes the brush draw a straight line. If `null` or 'none' or any other string that is not a modifier key the feature is disabled.",
   "file": 49
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Stroke Dash Array.",
   "file": 49
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of a brush (one of \"butt\", \"round\", \"square\")",
   "file": 49
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of a brush (one of \"bevel\", \"round\", \"miter\")",
   "file": 49
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's",
   "file": 49
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width of a brush, has to be a Number, no string literals",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "_drawSegment",
   "hash": "#_drawSegment",
   "desc": "Invoked inside on mouse down and mouse move",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "_finalizeAndAddPath",
   "hash": "#_finalizeAndAddPath",
   "desc": "On mouseup after drawing the path on contextTop canvas we use the points captured to create an new fabric path object and add it to the fabric canvas.",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "convertPointsToSVGPath",
   "hash": "#convertPointsToSVGPath",
   "desc": "Converts points to SVG path",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "createPath",
   "hash": "#createPath",
   "desc": "Creates fabric.Path object to add on canvas",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "decimatePoints",
   "hash": "#decimatePoints",
   "desc": "Decimate points array with the decimate value",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "onMouseDown",
   "hash": "#onMouseDown",
   "desc": "Invoked on mouse down",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "onMouseMove",
   "hash": "#onMouseMove",
   "desc": "Invoked on mouse move",
   "file": 49
  },
  {
   "section": "Methods",
   "name": "onMouseUp",
   "hash": "#onMouseUp",
   "desc": "Invoked on mouse up",
   "file": 49
  },
  {
   "section": "default",
   "name": "new Point",
   "hash": "#Point",
   "desc": "Point class",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#add",
   "desc": "Adds another point to this one and returns another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "addEquals",
   "hash": "#addEquals",
   "desc": "Adds another point to this one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "return a cloned instance of the point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "distanceFrom",
   "hash": "#distanceFrom",
   "desc": "Returns distance from this point and another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "divide",
   "hash": "#divide",
   "desc": "Divides this point by a value and returns a new one TODO: rename in scalarDivide in 2.0",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "divideEquals",
   "hash": "#divideEquals",
   "desc": "Divides this point by a value TODO: rename in scalarDivideEquals in 2.0",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "eq",
   "hash": "#eq",
   "desc": "Returns true if this point is equal to another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "gt",
   "hash": "#gt",
   "desc": "Returns true if this point is greater another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "gte",
   "hash": "#gte",
   "desc": "Returns true if this point is greater than or equal to another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "lerp",
   "hash": "#lerp",
   "desc": "Returns new point which is the result of linear interpolation with this one and another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "lt",
   "hash": "#lt",
   "desc": "Returns true if this point is less than another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "lte",
   "hash": "#lte",
   "desc": "Returns true if this point is less than or equal to another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "max",
   "hash": "#max",
   "desc": "Returns a new point which is the max of this and another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "midPointFrom",
   "hash": "#midPointFrom",
   "desc": "Returns the point between this point and another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "min",
   "hash": "#min",
   "desc": "Returns a new point which is the min of this and another one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "multiply",
   "hash": "#multiply",
   "desc": "Multiplies this point by a value and returns a new one TODO: rename in scalarMultiply in 2.0",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "multiplyEquals",
   "hash": "#multiplyEquals",
   "desc": "Multiplies this point by a value TODO: rename in scalarMultiplyEquals in 2.0",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "scalarAdd",
   "hash": "#scalarAdd",
   "desc": "Adds value to this point and returns a new one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "scalarAddEquals",
   "hash": "#scalarAddEquals",
   "desc": "Adds value to this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "scalarSubtract",
   "hash": "#scalarSubtract",
   "desc": "Subtracts value from this point and returns a new one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "scalarSubtractEquals",
   "hash": "#scalarSubtractEquals",
   "desc": "Subtracts value from this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "setFromPoint",
   "hash": "#setFromPoint",
   "desc": "Sets x/y of this point from another point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "setX",
   "hash": "#setX",
   "desc": "Sets x of this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "setXY",
   "hash": "#setXY",
   "desc": "Sets x/y of this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "setY",
   "hash": "#setY",
   "desc": "Sets y of this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "subtract",
   "hash": "#subtract",
   "desc": "Subtracts another point from this point and returns a new one",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "subtractEquals",
   "hash": "#subtractEquals",
   "desc": "Subtracts another point from this point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "swap",
   "hash": "#swap",
   "desc": "Swaps x/y of this point and another point",
   "file": 50
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of this point",
   "file": 50
  },
  {
   "section": "default",
   "name": "new Polygon",
   "hash": "#Polygon",
   "desc": "Polygon class",
   "file": 51
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 51
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 51
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 51
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 51
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 51
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 51
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 51
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 51
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 51
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 51
  },
  {
   "section": "Members",
   "name": "exactBoundingBox",
   "hash": "#exactBoundingBox",
   "desc": "WARNING: Feature in progress Calculate the exact bounding box taking in account strokeWidth on acute angles this will be turned to true by default on fabric 6.0 maybe will be left in as an optimization since calculations may be slow",
   "file": 51
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 51
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 51
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 51
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 51
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 51
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 51
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 51
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 51
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 51
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 51
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 51
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 51
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 51
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 51
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 51
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 51
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 51
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 51
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 51
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 51
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 51
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 51
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 51
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 51
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 51
  },
  {
   "section": "Members",
   "name": "points",
   "hash": "#points",
   "desc": "Points array",
   "file": 51
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 51
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 51
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 51
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 51
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 51
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 51
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 51
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 51
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 51
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 51
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 51
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.Polygon instance from an object representation",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 51
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 51
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 51
  },
  {
   "section": "default",
   "name": "new Polyline",
   "hash": "#Polyline",
   "desc": "Polyline class",
   "file": 52
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by fabric.Polyline.fromElement)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 52
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 52
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 52
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 52
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 52
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 52
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 52
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 52
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 52
  },
  {
   "section": "Members",
   "name": "exactBoundingBox",
   "hash": "#exactBoundingBox",
   "desc": "WARNING: Feature in progress Calculate the exact bounding box taking in account strokeWidth on acute angles this will be turned to true by default on fabric 6.0 maybe will be left in as an optimization since calculations may be slow",
   "file": 52
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 52
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 52
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 52
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 52
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 52
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 52
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 52
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 52
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 52
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 52
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 52
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 52
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 52
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 52
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 52
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 52
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 52
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 52
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 52
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 52
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 52
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 52
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 52
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 52
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 52
  },
  {
   "section": "Members",
   "name": "points",
   "hash": "#points",
   "desc": "Points array",
   "file": 52
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 52
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 52
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 52
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 52
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 52
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 52
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 52
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 52
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 52
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 52
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 52
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "fromElementGenerator",
   "hash": "#.fromElementGenerator",
   "desc": "Returns fabric.Polyline instance from an SVG element",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.Polyline instance from an object representation",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 52
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 52
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 52
  },
  {
   "section": "default",
   "name": "new Rect",
   "hash": "#Rect",
   "desc": "Rectangle class",
   "file": 53
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 53
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 53
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 53
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 53
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 53
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 53
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 53
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 53
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 53
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 53
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 53
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 53
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 53
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 53
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 53
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 53
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 53
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 53
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 53
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 53
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 53
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 53
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 53
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 53
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 53
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 53
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 53
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 53
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 53
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 53
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 53
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 53
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 53
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 53
  },
  {
   "section": "Members",
   "name": "rx",
   "hash": "#rx",
   "desc": "Horizontal border radius",
   "file": 53
  },
  {
   "section": "Members",
   "name": "ry",
   "hash": "#ry",
   "desc": "Vertical border radius",
   "file": 53
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 53
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 53
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 53
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (",
   "file": 53
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 53
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 53
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 53
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 53
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 53
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 53
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 53
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 53
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 53
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 53
  },
  {
   "section": "default",
   "name": "new Shadow",
   "hash": "#Shadow",
   "desc": "Shadow class",
   "file": 54
  },
  {
   "section": "Members",
   "name": "reOffsetsAndBlur",
   "hash": "#.reOffsetsAndBlur",
   "desc": "Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")",
   "file": 54
  },
  {
   "section": "Members",
   "name": "affectStroke",
   "hash": "#affectStroke",
   "desc": "Whether the shadow should affect stroke operations",
   "file": 54
  },
  {
   "section": "Members",
   "name": "blur",
   "hash": "#blur",
   "desc": "Shadow blur",
   "file": 54
  },
  {
   "section": "Members",
   "name": "color",
   "hash": "#color",
   "desc": "Shadow color",
   "file": 54
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "Indicates whether toObject should include default values",
   "file": 54
  },
  {
   "section": "Members",
   "name": "nonScaling",
   "hash": "#nonScaling",
   "desc": "When `false`, the shadow will scale with the object. When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale. default to false",
   "file": 54
  },
  {
   "section": "Members",
   "name": "offsetX",
   "hash": "#offsetX",
   "desc": "Shadow horizontal offset",
   "file": 54
  },
  {
   "section": "Members",
   "name": "offsetY",
   "hash": "#offsetY",
   "desc": "Shadow vertical offset",
   "file": 54
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 54
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of a shadow",
   "file": 54
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 54
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns SVG representation of a shadow",
   "file": 54
  },
  {
   "section": "default",
   "name": "new SprayBrush",
   "hash": "#SprayBrush",
   "desc": "SprayBrush class",
   "file": 55
  },
  {
   "section": "Members",
   "name": "density",
   "hash": "#density",
   "desc": "Density of a spray (number of dots per chunk)",
   "file": 55
  },
  {
   "section": "Members",
   "name": "dotWidth",
   "hash": "#dotWidth",
   "desc": "Width of spray dots",
   "file": 55
  },
  {
   "section": "Members",
   "name": "dotWidthVariance",
   "hash": "#dotWidthVariance",
   "desc": "Width variance of spray dots",
   "file": 55
  },
  {
   "section": "Members",
   "name": "optimizeOverlapping",
   "hash": "#optimizeOverlapping",
   "desc": "Whether overlapping dots (rectangles) should be removed (for performance reasons)",
   "file": 55
  },
  {
   "section": "Members",
   "name": "randomOpacity",
   "hash": "#randomOpacity",
   "desc": "Whether opacity of a dot should be random",
   "file": 55
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width of a spray",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "_render",
   "hash": "#_render",
   "desc": "Render all spray chunks",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "addSprayChunk",
   "hash": "#addSprayChunk",
   "desc": null,
   "file": 55
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "onMouseDown",
   "hash": "#onMouseDown",
   "desc": "Invoked on mouse down",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "onMouseMove",
   "hash": "#onMouseMove",
   "desc": "Invoked on mouse move",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "onMouseUp",
   "hash": "#onMouseUp",
   "desc": "Invoked on mouse up",
   "file": 55
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Render new chunk of spray brush",
   "file": 55
  },
  {
   "section": "default",
   "name": "new StaticCanvas",
   "hash": "#StaticCanvas",
   "desc": "Static canvas class",
   "file": 56
  },
  {
   "section": "Members",
   "name": "EMPTY_JSON",
   "hash": "#.EMPTY_JSON",
   "desc": null,
   "file": 56
  },
  {
   "section": "Members",
   "name": "allowTouchScrolling",
   "hash": "#allowTouchScrolling",
   "desc": "Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas",
   "file": 56
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of canvas instance. Should be set via",
   "file": 56
  },
  {
   "section": "Members",
   "name": "backgroundImage",
   "hash": "#backgroundImage",
   "desc": "Background image of canvas instance. since 2.4.0 image caching is active, please when putting an image as background, add to the canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom vale. As an alternative you can disable image objectCaching",
   "file": 56
  },
  {
   "section": "Members",
   "name": "backgroundVpt",
   "hash": "#backgroundVpt",
   "desc": "if set to false background image is not affected by viewport transform",
   "file": 56
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the canvas has rendered, and the context is placed in the top left corner of the canvas. clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true",
   "file": 56
  },
  {
   "section": "Members",
   "name": "controlsAboveOverlay",
   "hash": "#controlsAboveOverlay",
   "desc": "Indicates whether object controls (borders/controls) are rendered above overlay image",
   "file": 56
  },
  {
   "section": "Members",
   "name": "enableRetinaScaling",
   "hash": "#enableRetinaScaling",
   "desc": "When true, canvas is scaled by devicePixelRatio for better rendering on retina screens",
   "file": 56
  },
  {
   "section": "Members",
   "name": "FX_DURATION",
   "hash": "#FX_DURATION",
   "desc": "Animation duration (in ms) for fx* methods",
   "file": 56
  },
  {
   "section": "Members",
   "name": "imageSmoothingEnabled",
   "hash": "#imageSmoothingEnabled",
   "desc": "Indicates whether this canvas will use image smoothing, this is on by default in browsers",
   "file": 56
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "Indicates whether toObject/toDatalessObject should include default values if set to false, takes precedence over the object value.",
   "file": 56
  },
  {
   "section": "Members",
   "name": "overlayColor",
   "hash": "#overlayColor",
   "desc": "Overlay color of canvas instance. Should be set via",
   "file": 56
  },
  {
   "section": "Members",
   "name": "overlayImage",
   "hash": "#overlayImage",
   "desc": "Overlay image of canvas instance. since 2.4.0 image caching is active, please when putting an image as overlay, add to the canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom vale. As an alternative you can disable image objectCaching",
   "file": 56
  },
  {
   "section": "Members",
   "name": "overlayVpt",
   "hash": "#overlayVpt",
   "desc": "if set to false overlya image is not affected by viewport transform",
   "file": 56
  },
  {
   "section": "Members",
   "name": "renderOnAddRemove",
   "hash": "#renderOnAddRemove",
   "desc": "Indicates whether",
   "file": 56
  },
  {
   "section": "Members",
   "name": "skipOffscreen",
   "hash": "#skipOffscreen",
   "desc": "Based on vptCoords and object.aCoords, skip rendering of objects that are not included in current viewport. May greatly help in applications with crowded canvas and use of zoom/pan If One of the corner of the bounding box of the object is on the canvas the objects get rendered.",
   "file": 56
  },
  {
   "section": "Members",
   "name": "stateful",
   "hash": "#stateful",
   "desc": "Indicates whether objects' state should be saved",
   "file": 56
  },
  {
   "section": "Members",
   "name": "svgViewportTransformation",
   "hash": "#svgViewportTransformation",
   "desc": "When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true, a zoomed canvas will then produce zoomed SVG output.",
   "file": 56
  },
  {
   "section": "Members",
   "name": "viewportTransform",
   "hash": "#viewportTransform",
   "desc": "The transformation (a Canvas 2D API transform matrix) which focuses the viewport",
   "file": 56
  },
  {
   "section": "Members",
   "name": "vptCoords",
   "hash": "#vptCoords",
   "desc": "Describe canvas element extension over design properties are tl,tr,bl,br. if canvas is not zoomed/panned those points are the four corner of canvas if canvas is viewportTransformed you those points indicate the extension of canvas element in plain untrasformed coordinates The coordinates get updated with @method calcViewportBoundaries.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "supports",
   "hash": "#.supports",
   "desc": "Provides a way to check support of some of the canvas methods (either those of HTMLCanvasElement itself, or rendering context)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "absolutePan",
   "hash": "#absolutePan",
   "desc": "Pan viewport so as to place point at top left corner of canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "add",
   "hash": "#add",
   "desc": "Adds objects to collection, Canvas or Group, then renders canvas (if `renderOnAddRemove` is not `false`). in case of Group no changes to bounding box are made. Objects should be instances of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the add method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object or a selection up in stack of drawn objects An optional parameter, intersecting allows to move the object in front of the first intersecting object. Where intersection is calculated with bounding box. If no intersection is found, there will not be change in the stack.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object or the objects of a multiple selection to the top of the stack of drawn objects",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "calcOffset",
   "hash": "#calcOffset",
   "desc": "Calculates canvas element offset relative to the document This method is also attached as \"resize\" event handler of window",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "calcViewportBoundaries",
   "hash": "#calcViewportBoundaries",
   "desc": "Calculate the position of the 4 corner of canvas with current viewportTransform. helps to determinate when an object is in the current rendering viewport using object absolute coordinates ( aCoords )",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "centerObject",
   "hash": "#centerObject",
   "desc": "Centers object vertically and horizontally in the canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "centerObjectH",
   "hash": "#centerObjectH",
   "desc": "Centers object horizontally in the canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "centerObjectV",
   "hash": "#centerObjectV",
   "desc": "Centers object vertically in the canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "clear",
   "hash": "#clear",
   "desc": "Clears all contexts (background, main, top) of an instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "clearContext",
   "hash": "#clearContext",
   "desc": "Clears specified context of canvas element",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones canvas instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "cloneWithoutData",
   "hash": "#cloneWithoutData",
   "desc": "Clones canvas instance without cloning existing data. This essentially copies canvas dimensions, clipping properties, etc. but leaves data empty (so that you can populate it with your own)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns number representation of a collection complexity",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "contains",
   "hash": "#contains",
   "desc": "Returns true if collection contains an object",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "createSVGFontFacesMarkup",
   "hash": "#createSVGFontFacesMarkup",
   "desc": "Creates markup containing SVG font faces, font URLs for font faces must be collected by developers and are not extracted from the DOM by fabricjs",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "createSVGRefElementsMarkup",
   "hash": "#createSVGRefElementsMarkup",
   "desc": "Creates markup containing SVG referenced elements like patterns, gradients etc.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "Clears a canvas element and dispose objects",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCanvas",
   "hash": "#drawClipPathOnCanvas",
   "desc": "Paint the cached clipPath on the lowerCanvasEl",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "fire",
   "hash": "#fire",
   "desc": "Fires event with an optional options object",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "forEachObject",
   "hash": "#forEachObject",
   "desc": "Executes given function for each object in this group",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "fxCenterObjectH",
   "hash": "#fxCenterObjectH",
   "desc": "Centers object horizontally with animation.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "fxCenterObjectV",
   "hash": "#fxCenterObjectV",
   "desc": "Centers object vertically with animation.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "fxRemove",
   "hash": "#fxRemove",
   "desc": "Same as `fabric.Canvas#remove` but animated",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "fxStraightenObject",
   "hash": "#fxStraightenObject",
   "desc": "Same as fabric.Canvas.prototype.straightenObject, but animated",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getCenter",
   "hash": "#getCenter",
   "desc": "Returns coordinates of a center of canvas. Returned value is an object with top and left properties",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getContext",
   "hash": "#getContext",
   "desc": "Returns context of canvas where objects are drawn",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getElement",
   "hash": "#getElement",
   "desc": "Returns &lt;canvas> element corresponding to this instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getHeight",
   "hash": "#getHeight",
   "desc": "Returns canvas height (in px)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getObjects",
   "hash": "#getObjects",
   "desc": "Returns an array of children objects of this instance Type parameter introduced in 1.3.10 since 2.3.5 this method return always a COPY of the array;",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getVpCenter",
   "hash": "#getVpCenter",
   "desc": "Calculate the point in canvas that correspond to the center of actual viewport.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getWidth",
   "hash": "#getWidth",
   "desc": "Returns canvas width (in px)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "getZoom",
   "hash": "#getZoom",
   "desc": "Returns canvas zoom level",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "insertAt",
   "hash": "#insertAt",
   "desc": "Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`) An object should be an instance of (or inherit from) fabric.Object Use of this function is highly discouraged for groups. you can add a bunch of objects with the insertAt method but then you NEED to run a addWithUpdate call for the Group class or position/bbox will be wrong.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "isEmpty",
   "hash": "#isEmpty",
   "desc": "Returns true if collection contains no objects",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "item",
   "hash": "#item",
   "desc": "Returns object at specified index",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "loadFromJSON",
   "hash": "#loadFromJSON",
   "desc": "Populates canvas with data from the specified JSON. JSON format must conform to the one of",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "relativePan",
   "hash": "#relativePan",
   "desc": "Pans viewpoint relatively",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "remove",
   "hash": "#remove",
   "desc": "Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "renderAll",
   "hash": "#renderAll",
   "desc": "Renders the canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "renderCanvas",
   "hash": "#renderCanvas",
   "desc": "Renders background, objects, overlay and controls.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "requestRenderAll",
   "hash": "#requestRenderAll",
   "desc": "Append a renderAll request to next animation frame. unless one is already in progress, in that case nothing is done a boolean flag will avoid appending more.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object or a selection down in stack of drawn objects An optional parameter, intersecting allows to move the object in behind the first intersecting object. Where intersection is calculated with bounding box. If no intersection is found, there will not be change in the stack.",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object or the objects of a multiple selection to the bottom of the stack of drawn objects",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setBackgroundColor",
   "hash": "#setBackgroundColor",
   "desc": "Sets",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setBackgroundImage",
   "hash": "#setBackgroundImage",
   "desc": "Sets",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setDimensions",
   "hash": "#setDimensions",
   "desc": "Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setHeight",
   "hash": "#setHeight",
   "desc": "Sets height of this canvas instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setOverlayColor",
   "hash": "#setOverlayColor",
   "desc": "Sets",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setOverlayImage",
   "hash": "#setOverlayImage",
   "desc": "Sets",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setViewportTransform",
   "hash": "#setViewportTransform",
   "desc": "Sets viewport transformation of this canvas instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setWidth",
   "hash": "#setWidth",
   "desc": "Sets width of this canvas instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "setZoom",
   "hash": "#setZoom",
   "desc": "Sets zoom level of this canvas instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "size",
   "hash": "#size",
   "desc": "Returns a size of a collection (i.e: length of an array containing its objects)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "straightenObject",
   "hash": "#straightenObject",
   "desc": "Straightens object, then rerenders canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Create a new HTMLCanvas element painted with the current canvas content. No need to resize the actual one or repaint it. Will transfer object ownership to a new canvas, paint it, and set everything back. This is an intermediary step used to get to a dataUrl but also it is useful to create quick image copies of a canvas without passing for the dataUrl string",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toDatalessJSON",
   "hash": "#toDatalessJSON",
   "desc": "Returns dataless JSON representation of canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns dataless object representation of canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns Object representation of canvas this alias is provided because if you call JSON.stringify on an instance, the toJSON object will be invoked if it exists. Having a toJSON method means you can do JSON.stringify(myCanvas)",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns SVG representation of canvas",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "viewportCenterObject",
   "hash": "#viewportCenterObject",
   "desc": "Centers object vertically and horizontally in the viewport",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "viewportCenterObjectH",
   "hash": "#viewportCenterObjectH",
   "desc": "Centers object horizontally in the viewport, object.top is unchanged",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "viewportCenterObjectV",
   "hash": "#viewportCenterObjectV",
   "desc": "Centers object Vertically in the viewport, object.top is unchanged",
   "file": 56
  },
  {
   "section": "Methods",
   "name": "zoomToPoint",
   "hash": "#zoomToPoint",
   "desc": "Sets zoom level of this canvas instance, the zoom centered around point meaning that following zoom to point with the same point will have the visual effect of the zoom originating from that point. The point won't move. It has nothing to do with canvas center or visual center of the viewport.",
   "file": 56
  },
  {
   "section": "default",
   "name": "new Text",
   "hash": "#Text",
   "desc": "Text class",
   "file": 57
  },
  {
   "section": "Members",
   "name": "ATTRIBUTE_NAMES",
   "hash": "#.ATTRIBUTE_NAMES",
   "desc": "List of attribute names to account for when parsing SVG element (used by",
   "file": 57
  },
  {
   "section": "Members",
   "name": "DEFAULT_SVG_FONT_SIZE",
   "hash": "#.DEFAULT_SVG_FONT_SIZE",
   "desc": "Default SVG font size",
   "file": 57
  },
  {
   "section": "Members",
   "name": "__charBounds",
   "hash": "#__charBounds",
   "desc": "contains characters bounding boxes",
   "file": 57
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "_fontSizeMult",
   "hash": "#_fontSizeMult",
   "desc": "Text Line proportion to font Size (in pixels)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "_measuringContext",
   "hash": "#_measuringContext",
   "desc": "Reference to a context to measure text char or couple of chars the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every text object created.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "_styleProperties",
   "hash": "#_styleProperties",
   "desc": "Array of properties that define a style unit (of 'styles').",
   "file": 57
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 57
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 57
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 57
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh",
   "file": 57
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "charSpacing",
   "hash": "#charSpacing",
   "desc": "additional space between characters expressed in thousands of em unit",
   "file": 57
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 57
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 57
  },
  {
   "section": "Members",
   "name": "deltaY",
   "hash": "#deltaY",
   "desc": "Baseline shift, styles only, keep at 0 for the main text object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "direction",
   "hash": "#direction",
   "desc": "WARNING: EXPERIMENTAL. NOT SUPPORTED YET determine the direction of the text. This has to be set manually together with textAlign and originX for proper experience. some interesting link for the future https://www.w3.org/International/questions/qa-bidi-unicode-controls",
   "file": 57
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 57
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 57
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 57
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fontFamily",
   "hash": "#fontFamily",
   "desc": "Font family",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fontSize",
   "hash": "#fontSize",
   "desc": "Font size (in pixels)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fontStyle",
   "hash": "#fontStyle",
   "desc": "Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".",
   "file": 57
  },
  {
   "section": "Members",
   "name": "fontWeight",
   "hash": "#fontWeight",
   "desc": "Font weight (e.g. bold, normal, 400, 600, 800)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 57
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 57
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 57
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 57
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 57
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lineHeight",
   "hash": "#lineHeight",
   "desc": "Line height",
   "file": 57
  },
  {
   "section": "Members",
   "name": "linethrough",
   "hash": "#linethrough",
   "desc": "Text decoration linethrough.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 57
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 57
  },
  {
   "section": "Members",
   "name": "MIN_TEXT_WIDTH",
   "hash": "#MIN_TEXT_WIDTH",
   "desc": "contains the min text width to avoid getting 0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 57
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 57
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 57
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 57
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 57
  },
  {
   "section": "Members",
   "name": "overline",
   "hash": "#overline",
   "desc": "Text decoration overline.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 57
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 57
  },
  {
   "section": "Members",
   "name": "path",
   "hash": "#path",
   "desc": "fabric.Path that the text should follow. since 4.6.0 the path will be drawn automatically. if you want to make the path visible, give it a stroke and strokeWidth or fill value if you want it to be hidden, assign visible = false to the path. This feature is in BETA, and SVG import/export is not yet supported.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "pathAlign",
   "hash": "#pathAlign",
   "desc": "How text is aligned to the path. This property determines the perpendicular position of each character relative to the path. (one of \"baseline\", \"center\", \"ascender\", \"descender\") This feature is in BETA, and its behavior may change",
   "file": 57
  },
  {
   "section": "Members",
   "name": "pathSide",
   "hash": "#pathSide",
   "desc": "Which side of the path the text should be drawn on. Only used when text has a path",
   "file": 57
  },
  {
   "section": "Members",
   "name": "pathStartOffset",
   "hash": "#pathStartOffset",
   "desc": "Offset amount for text path starting position Only used when text has a path",
   "file": 57
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 57
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 57
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (",
   "file": 57
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 57
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "styles",
   "hash": "#styles",
   "desc": "Object containing character styles - top-level properties -> line numbers, 2nd-level properties - character numbers",
   "file": 57
  },
  {
   "section": "Members",
   "name": "subscript",
   "hash": "#subscript",
   "desc": "Subscript schema object (minimum overlap)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "superscript",
   "hash": "#superscript",
   "desc": "Superscript schema object (minimum overlap)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "textAlign",
   "hash": "#textAlign",
   "desc": "Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\", \"justify-left\", \"justify-center\" or \"justify-right\".",
   "file": 57
  },
  {
   "section": "Members",
   "name": "textBackgroundColor",
   "hash": "#textBackgroundColor",
   "desc": "Background color of text lines",
   "file": 57
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 57
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 57
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 57
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 57
  },
  {
   "section": "Members",
   "name": "underline",
   "hash": "#underline",
   "desc": "Text decoration underline.",
   "file": 57
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 57
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "fromElement",
   "hash": "#.fromElement",
   "desc": "Returns fabric.Text instance from an SVG element (",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.Text instance from an object representation",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_getFontDeclaration",
   "hash": "#_getFontDeclaration",
   "desc": "return font declaration string for canvas context",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_getStyleDeclaration",
   "hash": "#_getStyleDeclaration",
   "desc": "get the reference, not a clone, of the style object for a given character",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_measureLine",
   "hash": "#_measureLine",
   "desc": "measure every grapheme of a line, populating __charBounds",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_splitTextIntoLines",
   "hash": "#_splitTextIntoLines",
   "desc": "Returns the text as an array of lines.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns SVG representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 57
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "calcTextHeight",
   "hash": "#calcTextHeight",
   "desc": "Calculate text box height",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "cleanStyle",
   "hash": "#cleanStyle",
   "desc": "Check if characters in a text have a value for a property whose value matches the textbox's value for that property.  If so, the character-level property is deleted.  If the character has no other properties, then it is also deleted.  Finally, if the line containing that character has no other characters then it also is deleted.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "enlargeSpaces",
   "hash": "#enlargeSpaces",
   "desc": "Enlarge space boxes and shift the others",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "get2DCursorLocation",
   "hash": "#get2DCursorLocation",
   "desc": "Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getCompleteStyleDeclaration",
   "hash": "#getCompleteStyleDeclaration",
   "desc": "return a new object that contains all the style property for a character the object returned is newly created",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getHeightOfChar",
   "hash": "#getHeightOfChar",
   "desc": "Computes height of character at given position",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getHeightOfLine",
   "hash": "#getHeightOfLine",
   "desc": "Calculate height of line at 'lineIndex'",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSelectionStyles",
   "hash": "#getSelectionStyles",
   "desc": "Gets style of a current selection/cursor (at the start position) if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getValueOfPropertyAt",
   "hash": "#getValueOfPropertyAt",
   "desc": "Retrieves the value of property at given character position",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "initDimensions",
   "hash": "#initDimensions",
   "desc": "Initialize or update text dimensions. Updates this.width and this.height with the proper values. Does not return dimensions.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isEmptyStyles",
   "hash": "#isEmptyStyles",
   "desc": "Returns true if object has no styling or no styling in a line",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isEndOfWrapping",
   "hash": "#isEndOfWrapping",
   "desc": "Detect if the text line is ended with an hard break text and itext do not have wrapping, return false",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "measureLine",
   "hash": "#measureLine",
   "desc": "measure a text line measuring all characters.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "missingNewlineOffset",
   "hash": "#missingNewlineOffset",
   "desc": "Detect if a line has a linebreak and so we need to account for it when moving and counting style. It return always for text and Itext.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "removeStyle",
   "hash": "#removeStyle",
   "desc": "Remove a style property or properties from all individual character styles in a text object.  Deletes the character style object if it contains no other style props.  Deletes a line style object if it contains no other character styles.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders text instance on a specified context",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "set",
   "hash": "#set",
   "desc": "Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setPathInfo",
   "hash": "#setPathInfo",
   "desc": "If text has a path, it will add the extra information needed for path and text calculations",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setSelectionStyles",
   "hash": "#setSelectionStyles",
   "desc": "Sets style of a current selection, if no selection exist, do not set anything.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setSubscript",
   "hash": "#setSubscript",
   "desc": "Turns the character into an 'inferior figure' (i.e. 'subscript')",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setSuperscript",
   "hash": "#setSuperscript",
   "desc": "Turns the character into a 'superior figure' (i.e. 'superscript')",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "styleHas",
   "hash": "#styleHas",
   "desc": "Returns true if object has a style property or has it ina specified line This function is used to detect if a text will use a particular property or not.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 57
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 57
  },
  {
   "section": "default",
   "name": "new Textbox",
   "hash": "#Textbox",
   "desc": "Textbox class, based on IText, allows the user to resize the text rectangle and wraps lines automatically. Textboxes have their Y scaling locked, the user can only change width. Height is adjusted automatically based on the wrapping of lines.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "__charBounds",
   "hash": "#__charBounds",
   "desc": "contains characters bounding boxes",
   "file": 58
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "_fontSizeMult",
   "hash": "#_fontSizeMult",
   "desc": "Text Line proportion to font Size (in pixels)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "_measuringContext",
   "hash": "#_measuringContext",
   "desc": "Reference to a context to measure text char or couple of chars the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas once created it will be referenced on fabric._measuringContext to avoid creating a canvas for every text object created.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "_styleProperties",
   "hash": "#_styleProperties",
   "desc": "Array of properties that define a style unit (of 'styles').",
   "file": 58
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 58
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 58
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 58
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh",
   "file": 58
  },
  {
   "section": "Members",
   "name": "caching",
   "hash": "#caching",
   "desc": "Indicates whether internal text char widths can be cached",
   "file": 58
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "charSpacing",
   "hash": "#charSpacing",
   "desc": "additional space between characters expressed in thousands of em unit",
   "file": 58
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 58
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 58
  },
  {
   "section": "Members",
   "name": "ctrlKeysMapDown",
   "hash": "#ctrlKeysMapDown",
   "desc": "For functionalities on keyDown + ctrl || cmd",
   "file": 58
  },
  {
   "section": "Members",
   "name": "ctrlKeysMapUp",
   "hash": "#ctrlKeysMapUp",
   "desc": "For functionalities on keyUp + ctrl || cmd",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cursorColor",
   "hash": "#cursorColor",
   "desc": "Color of text cursor color in editing mode. if not set (default) will take color from the text. if set to a color value that fabric can understand, it will be used instead of the color of the text at the current position.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cursorDelay",
   "hash": "#cursorDelay",
   "desc": "Delay between cursor blink (in ms)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cursorDuration",
   "hash": "#cursorDuration",
   "desc": "Duration of cursor fadein (in ms)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "cursorWidth",
   "hash": "#cursorWidth",
   "desc": "Width of cursor (in px)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "deltaY",
   "hash": "#deltaY",
   "desc": "Baseline shift, styles only, keep at 0 for the main text object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "direction",
   "hash": "#direction",
   "desc": "WARNING: EXPERIMENTAL. NOT SUPPORTED YET determine the direction of the text. This has to be set manually together with textAlign and originX for proper experience. some interesting link for the future https://www.w3.org/International/questions/qa-bidi-unicode-controls",
   "file": 58
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "editable",
   "hash": "#editable",
   "desc": "Indicates whether a text can be edited",
   "file": 58
  },
  {
   "section": "Members",
   "name": "editingBorderColor",
   "hash": "#editingBorderColor",
   "desc": "Border color of text object while it's in editing mode",
   "file": 58
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 58
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 58
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 58
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fontFamily",
   "hash": "#fontFamily",
   "desc": "Font family",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fontSize",
   "hash": "#fontSize",
   "desc": "Font size (in pixels)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fontStyle",
   "hash": "#fontStyle",
   "desc": "Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".",
   "file": 58
  },
  {
   "section": "Members",
   "name": "fontWeight",
   "hash": "#fontWeight",
   "desc": "Font weight (e.g. bold, normal, 400, 600, 800)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 58
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 58
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Object height",
   "file": 58
  },
  {
   "section": "Members",
   "name": "hiddenTextareaContainer",
   "hash": "#hiddenTextareaContainer",
   "desc": "DOM container to append the hiddenTextarea. An alternative to attaching to the document.body. Useful to reduce laggish redraw of the full document.body tree and also with modals event capturing that won't let the textarea take focus.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 58
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 58
  },
  {
   "section": "Members",
   "name": "inCompositionMode",
   "hash": "#inCompositionMode",
   "desc": "Helps determining when the text is in composition, so that the cursor rendering is altered.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "isEditing",
   "hash": "#isEditing",
   "desc": "Indicates whether text is in editing mode",
   "file": 58
  },
  {
   "section": "Members",
   "name": "keysMap",
   "hash": "#keysMap",
   "desc": "For functionalities on keyDown Map a special key to a function of the instance/prototype If you need different behaviour for ESC or TAB or arrows, you have to change this map setting the name of a function that you build on the fabric.Itext or your prototype. the map change will affect all Instances unless you need for only some text Instances in that case you have to clone this object and assign your Instance. this.keysMap = fabric.util.object.clone(this.keysMap); The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]",
   "file": 58
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lineHeight",
   "hash": "#lineHeight",
   "desc": "Line height",
   "file": 58
  },
  {
   "section": "Members",
   "name": "linethrough",
   "hash": "#linethrough",
   "desc": "Text decoration linethrough.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 58
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 58
  },
  {
   "section": "Members",
   "name": "MIN_TEXT_WIDTH",
   "hash": "#MIN_TEXT_WIDTH",
   "desc": "contains the min text width to avoid getting 0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 58
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 58
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 58
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 58
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 58
  },
  {
   "section": "Members",
   "name": "overline",
   "hash": "#overline",
   "desc": "Text decoration overline.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 58
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 58
  },
  {
   "section": "Members",
   "name": "path",
   "hash": "#path",
   "desc": "fabric.Path that the text should follow. since 4.6.0 the path will be drawn automatically. if you want to make the path visible, give it a stroke and strokeWidth or fill value if you want it to be hidden, assign visible = false to the path. This feature is in BETA, and SVG import/export is not yet supported.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "pathAlign",
   "hash": "#pathAlign",
   "desc": "How text is aligned to the path. This property determines the perpendicular position of each character relative to the path. (one of \"baseline\", \"center\", \"ascender\", \"descender\") This feature is in BETA, and its behavior may change",
   "file": 58
  },
  {
   "section": "Members",
   "name": "pathSide",
   "hash": "#pathSide",
   "desc": "Which side of the path the text should be drawn on. Only used when text has a path",
   "file": 58
  },
  {
   "section": "Members",
   "name": "pathStartOffset",
   "hash": "#pathStartOffset",
   "desc": "Offset amount for text path starting position Only used when text has a path",
   "file": 58
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 58
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "selectionColor",
   "hash": "#selectionColor",
   "desc": "Color of text selection",
   "file": 58
  },
  {
   "section": "Members",
   "name": "selectionEnd",
   "hash": "#selectionEnd",
   "desc": "Index where text selection ends",
   "file": 58
  },
  {
   "section": "Members",
   "name": "selectionStart",
   "hash": "#selectionStart",
   "desc": "Index where text selection starts (or where cursor is when there is no selection)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 58
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (",
   "file": 58
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 58
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "styles",
   "hash": "#styles",
   "desc": "Object containing character styles - top-level properties -> line numbers, 2nd-level properties - character numbers",
   "file": 58
  },
  {
   "section": "Members",
   "name": "subscript",
   "hash": "#subscript",
   "desc": "Subscript schema object (minimum overlap)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "superscript",
   "hash": "#superscript",
   "desc": "Superscript schema object (minimum overlap)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "textAlign",
   "hash": "#textAlign",
   "desc": "Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\", \"justify-left\", \"justify-center\" or \"justify-right\".",
   "file": 58
  },
  {
   "section": "Members",
   "name": "textBackgroundColor",
   "hash": "#textBackgroundColor",
   "desc": "Background color of text lines",
   "file": 58
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 58
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 58
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 58
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 58
  },
  {
   "section": "Members",
   "name": "underline",
   "hash": "#underline",
   "desc": "Text decoration underline.",
   "file": 58
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 58
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Object width",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns fabric.Textbox instance from an object representation",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_getFontDeclaration",
   "hash": "#_getFontDeclaration",
   "desc": "return font declaration string for canvas context",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_getSelectionForOffset",
   "hash": "#_getSelectionForOffset",
   "desc": "private Helps finding if the offset should be counted from Start or End",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_getStyleDeclaration",
   "hash": "#_getStyleDeclaration",
   "desc": "get the reference, not a clone, of the style object for a given character",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_measureLine",
   "hash": "#_measureLine",
   "desc": "measure every grapheme of a line, populating __charBounds",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_mouseDownHandler",
   "hash": "#_mouseDownHandler",
   "desc": "Default event handler for the basic functionalities needed on _mouseDown can be overridden to do something different. Scope of this implementation is: find the click position, set selectionStart find selectionEnd, initialize the drawing of either cursor or selection area initializing a mousedDown on a text area will cancel fabricjs knowledge of current compositionMode. It will be set to false.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_mouseDownHandlerBefore",
   "hash": "#_mouseDownHandlerBefore",
   "desc": "Default event handler for the basic functionalities needed on mousedown:before can be overridden to do something different. Scope of this implementation is: verify the object is already selected when mousing down",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_moveCursorLeftOrRight",
   "hash": "#_moveCursorLeftOrRight",
   "desc": "Moves cursor right or Left, fires event",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_moveCursorUpOrDown",
   "hash": "#_moveCursorUpOrDown",
   "desc": "Moves cursor up or down, fires the events",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_splitTextIntoLines",
   "hash": "#_splitTextIntoLines",
   "desc": "Returns the text as an array of lines.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns SVG representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "abortCursorAnimation",
   "hash": "#abortCursorAnimation",
   "desc": "Aborts cursor animation and clears all timeouts",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 58
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "calcTextHeight",
   "hash": "#calcTextHeight",
   "desc": "Calculate text box height",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "cleanStyle",
   "hash": "#cleanStyle",
   "desc": "Check if characters in a text have a value for a property whose value matches the textbox's value for that property.  If so, the character-level property is deleted.  If the character has no other properties, then it is also deleted.  Finally, if the line containing that character has no other characters then it also is deleted.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "clearContextTop",
   "hash": "#clearContextTop",
   "desc": "Prepare and clean the contextTop",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "copy",
   "hash": "#copy",
   "desc": "Copies selected text",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "doubleClickHandler",
   "hash": "#doubleClickHandler",
   "desc": "Default handler for double click, select a word",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "enlargeSpaces",
   "hash": "#enlargeSpaces",
   "desc": "Enlarge space boxes and shift the others",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "enterEditing",
   "hash": "#enterEditing",
   "desc": "Enters editing state",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "exitEditing",
   "hash": "#exitEditing",
   "desc": "Exits from editing state",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "findLineBoundaryLeft",
   "hash": "#findLineBoundaryLeft",
   "desc": "Find new selection index representing start of current line according to current selection index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "findLineBoundaryRight",
   "hash": "#findLineBoundaryRight",
   "desc": "Find new selection index representing end of current line according to current selection index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "findWordBoundaryLeft",
   "hash": "#findWordBoundaryLeft",
   "desc": "Find new selection index representing start of current word according to current selection index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "findWordBoundaryRight",
   "hash": "#findWordBoundaryRight",
   "desc": "Find new selection index representing end of current word according to current selection index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "fire",
   "hash": "#fire",
   "desc": "Fires event with an optional options object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "fromGraphemeToStringSelection",
   "hash": "#fromGraphemeToStringSelection",
   "desc": "convert from fabric to textarea values",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "fromStringToGraphemeSelection",
   "hash": "#fromStringToGraphemeSelection",
   "desc": "convert from textarea to grapheme indexes",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "get2DCursorLocation",
   "hash": "#get2DCursorLocation",
   "desc": "Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getCompleteStyleDeclaration",
   "hash": "#getCompleteStyleDeclaration",
   "desc": "return a new object that contains all the style property for a character the object returned is newly created",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getCurrentCharColor",
   "hash": "#getCurrentCharColor",
   "desc": "High level function to know the color of the cursor. the currentChar is the one that precedes the cursor Returns color (fill) of char at the current cursor if the text object has a pattern or gradient for filler, it will return that. Unused by the library, is for the end user",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getCurrentCharFontSize",
   "hash": "#getCurrentCharFontSize",
   "desc": "High level function to know the height of the cursor. the currentChar is the one that precedes the cursor Returns fontSize of char at the current cursor Unused from the library, is for the end user",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getDownCursorOffset",
   "hash": "#getDownCursorOffset",
   "desc": "Gets start offset of a selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getHeightOfChar",
   "hash": "#getHeightOfChar",
   "desc": "Computes height of character at given position",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getHeightOfLine",
   "hash": "#getHeightOfLine",
   "desc": "Calculate height of line at 'lineIndex'",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSelectedText",
   "hash": "#getSelectedText",
   "desc": "Returns selected text",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSelectionStartFromPointer",
   "hash": "#getSelectionStartFromPointer",
   "desc": "Returns index of a character corresponding to where an object was clicked",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSelectionStyles",
   "hash": "#getSelectionStyles",
   "desc": "Gets style of a current selection/cursor (at the start position) if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getUpCursorOffset",
   "hash": "#getUpCursorOffset",
   "desc": null,
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getValueOfPropertyAt",
   "hash": "#getValueOfPropertyAt",
   "desc": "Retrieves the value of property at given character position",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initAddedHandler",
   "hash": "#initAddedHandler",
   "desc": "Initializes \"added\" event handler",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initBehavior",
   "hash": "#initBehavior",
   "desc": "Initializes all the interactive behavior of IText",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initClicks",
   "hash": "#initClicks",
   "desc": "Initializes double and triple click event handlers",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initCursorSelectionHandlers",
   "hash": "#initCursorSelectionHandlers",
   "desc": "Initializes event handlers related to cursor or selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initDelayedCursor",
   "hash": "#initDelayedCursor",
   "desc": "Initializes delayed cursor",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initDoubleClickSimulation",
   "hash": "#initDoubleClickSimulation",
   "desc": "Initializes \"dbclick\" event handler",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initHiddenTextarea",
   "hash": "#initHiddenTextarea",
   "desc": "Initializes hidden textarea (needed to bring up keyboard in iOS)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initMousedownHandler",
   "hash": "#initMousedownHandler",
   "desc": "Initializes \"mousedown\" event handler",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initMouseMoveHandler",
   "hash": "#initMouseMoveHandler",
   "desc": "Initializes \"mousemove\" event handler",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "initMouseupHandler",
   "hash": "#initMouseupHandler",
   "desc": "Initializes \"mouseup\" event handler",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "insertChars",
   "hash": "#insertChars",
   "desc": "insert characters at start position, before start position. start  equal 1 it means the text get inserted between actual grapheme 0 and 1 if style array is provided, it must be as the same length of text in graphemes if end is provided and is bigger than start, old text is replaced. start/end ar per grapheme position in _text array.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "insertCharStyleObject",
   "hash": "#insertCharStyleObject",
   "desc": "Inserts style object for a given line/char index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "insertNewlineStyleObject",
   "hash": "#insertNewlineStyleObject",
   "desc": "Handle insertion of more consecutive style lines for when one or more newlines gets added to the text. Since current style needs to be shifted first we shift the current style of the number lines needed, then we add new lines from the last to the first.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "insertNewStyleBlock",
   "hash": "#insertNewStyleBlock",
   "desc": "Inserts style object(s)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isEmptyStyles",
   "hash": "#isEmptyStyles",
   "desc": "Returns true if object has no styling or no styling in a line",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isEndOfWrapping",
   "hash": "#isEndOfWrapping",
   "desc": "Detect if the text line is ended with an hard break text and itext do not have wrapping, return false",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "measureLine",
   "hash": "#measureLine",
   "desc": "measure a text line measuring all characters.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "missingNewlineOffset",
   "hash": "#missingNewlineOffset",
   "desc": "Detect if a line has a linebreak and so we need to account for it when moving and counting style. It return always for text and Itext.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorDown",
   "hash": "#moveCursorDown",
   "desc": "Moves cursor down",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorLeft",
   "hash": "#moveCursorLeft",
   "desc": "Moves cursor left",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorLeftWithoutShift",
   "hash": "#moveCursorLeftWithoutShift",
   "desc": "Moves cursor left without keeping selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorLeftWithShift",
   "hash": "#moveCursorLeftWithShift",
   "desc": "Moves cursor left while keeping selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorRight",
   "hash": "#moveCursorRight",
   "desc": "Moves cursor right",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorRightWithoutShift",
   "hash": "#moveCursorRightWithoutShift",
   "desc": "Moves cursor right without keeping selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorRightWithShift",
   "hash": "#moveCursorRightWithShift",
   "desc": "Moves cursor right while keeping selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorUp",
   "hash": "#moveCursorUp",
   "desc": "Moves cursor up",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorWithoutShift",
   "hash": "#moveCursorWithoutShift",
   "desc": "Moves cursor up without shift",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveCursorWithShift",
   "hash": "#moveCursorWithShift",
   "desc": "Moves cursor with shift",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onCompositionEnd",
   "hash": "#onCompositionEnd",
   "desc": "Composition end",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onCompositionStart",
   "hash": "#onCompositionStart",
   "desc": "Composition start",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onInput",
   "hash": "#onInput",
   "desc": "Handles onInput event",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onKeyDown",
   "hash": "#onKeyDown",
   "desc": "Handles keydown event only used for arrows and combination of modifier keys.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onKeyUp",
   "hash": "#onKeyUp",
   "desc": "Handles keyup event We handle KeyUp because ie11 and edge have difficulties copy/pasting if a copy/cut event fired, keyup is dismissed",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "paste",
   "hash": "#paste",
   "desc": "Pastes text",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "removeChars",
   "hash": "#removeChars",
   "desc": "Removes characters from start/end start/end ar per grapheme position in _text array.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "removeStyle",
   "hash": "#removeStyle",
   "desc": "Remove a style property or properties from all individual character styles in a text object.  Deletes the character style object if it contains no other style props.  Deletes a line style object if it contains no other character styles.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "removeStyleFromTo",
   "hash": "#removeStyleFromTo",
   "desc": "remove and reflow a style block from start to end.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "renderCursor",
   "hash": "#renderCursor",
   "desc": "Renders cursor",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "renderCursorOrSelection",
   "hash": "#renderCursorOrSelection",
   "desc": "Renders cursor or selection (depending on what exists) it does on the contextTop. If contextTop is not available, do nothing.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "renderSelection",
   "hash": "#renderSelection",
   "desc": "Renders text selection",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "searchWordBoundary",
   "hash": "#searchWordBoundary",
   "desc": "Finds index corresponding to beginning or end of a word",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "selectAll",
   "hash": "#selectAll",
   "desc": "Selects entire text",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "selectLine",
   "hash": "#selectLine",
   "desc": "Selects a line based on the index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "selectWord",
   "hash": "#selectWord",
   "desc": "Selects a word based on the index",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "set",
   "hash": "#set",
   "desc": "Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setCursorByClick",
   "hash": "#setCursorByClick",
   "desc": "Changes cursor location in a text depending on passed pointer (x/y) object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setPathInfo",
   "hash": "#setPathInfo",
   "desc": "If text has a path, it will add the extra information needed for path and text calculations",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSelectionEnd",
   "hash": "#setSelectionEnd",
   "desc": "Sets selection end (right boundary of a selection)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSelectionStart",
   "hash": "#setSelectionStart",
   "desc": "Sets selection start (left boundary of a selection)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSelectionStartEndWithShift",
   "hash": "#setSelectionStartEndWithShift",
   "desc": "Set the selectionStart and selectionEnd according to the new position of cursor mimic the key - mouse navigation when shift is pressed.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSelectionStyles",
   "hash": "#setSelectionStyles",
   "desc": "Sets style of a current selection, if no selection exist, do not set anything.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSubscript",
   "hash": "#setSubscript",
   "desc": "Turns the character into an 'inferior figure' (i.e. 'subscript')",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setSuperscript",
   "hash": "#setSuperscript",
   "desc": "Turns the character into a 'superior figure' (i.e. 'superscript')",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "shiftLineStyles",
   "hash": "#shiftLineStyles",
   "desc": "Shifts line styles up or down",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "styleHas",
   "hash": "#styleHas",
   "desc": "Returns true if object has a style property or has it ina specified line This function is used to detect if a text will use a particular property or not.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns string representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "tripleClickHandler",
   "hash": "#tripleClickHandler",
   "desc": "Default handler for triple click, select a line",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 58
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 58
  },
  {
   "section": "default",
   "name": "new Triangle",
   "hash": "#Triangle",
   "desc": "Triangle class",
   "file": 59
  },
  {
   "section": "Members",
   "name": "__corner",
   "hash": "#__corner",
   "desc": "keeps the value of the last hovered corner during mouse move. 0 is no corner, or 'mt', 'ml', 'mtr' etc.. It should be private, but there is no harm in using it as a read-only property.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "absolutePositioned",
   "hash": "#absolutePositioned",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will have its top and left relative to canvas, and will not be influenced by the object transform. This will make the clipPath relative to the canvas, but clipping just a particular object. WARNING this is beta, this feature may change or be renamed. since 2.4.0",
   "file": 59
  },
  {
   "section": "Members",
   "name": "aCoords",
   "hash": "#aCoords",
   "desc": "Describe object's corner position in canvas object absolute coordinates properties are tl,tr,bl,br and describe the four main corner. each property is an object with x, y, instance of Fabric.Point. The coordinates depends from this properties: width, height, scaleX, scaleY skewX, skewY, angle, strokeWidth, top, left. Those coordinates are useful to understand where an object is. They get updated with oCoords but they do not need to be updated when zoom or panning change. The coordinates get updated with @method setCoords. You can calculate them without updating with @method calcACoords();",
   "file": 59
  },
  {
   "section": "Members",
   "name": "angle",
   "hash": "#angle",
   "desc": "Angle of rotation of an object (in degrees)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "backgroundColor",
   "hash": "#backgroundColor",
   "desc": "Background color of an object. takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 59
  },
  {
   "section": "Members",
   "name": "borderColor",
   "hash": "#borderColor",
   "desc": "Color of controlling borders of an object (when it's active)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "borderDashArray",
   "hash": "#borderDashArray",
   "desc": "Array specifying dash pattern of an object's borders (hasBorder must be true)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "borderOpacityWhenMoving",
   "hash": "#borderOpacityWhenMoving",
   "desc": "Opacity of object's controlling borders when object is active and moving",
   "file": 59
  },
  {
   "section": "Members",
   "name": "borderScaleFactor",
   "hash": "#borderScaleFactor",
   "desc": "Scale factor of object's controlling borders bigger number will make a thicker border border is 1, so this is basically a border thickness since there is no way to change the border itself.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cacheProperties",
   "hash": "#cacheProperties",
   "desc": "List of properties to consider when checking if cache needs refresh Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single calls to Object.set(key, value). If the key is in this list, the object is marked as dirty and refreshed at the next render",
   "file": 59
  },
  {
   "section": "Members",
   "name": "centeredRotation",
   "hash": "#centeredRotation",
   "desc": "When true, this object will use center point as the origin of transformation when being rotated via the controls.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "centeredScaling",
   "hash": "#centeredScaling",
   "desc": "When true, this object will use center point as the origin of transformation when being scaled via the controls.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "clipPath",
   "hash": "#clipPath",
   "desc": "a fabricObject that, without stroke define a clipping area with their shape. filled in black the clipPath object gets used when the object has rendered, and the context is placed in the center of the object cacheCanvas. If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'",
   "file": 59
  },
  {
   "section": "Members",
   "name": "colorProperties",
   "hash": "#colorProperties",
   "desc": "List of properties to consider for animating colors.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "controls",
   "hash": "#controls",
   "desc": "custom controls interface controls are added by default_controls.js",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cornerColor",
   "hash": "#cornerColor",
   "desc": "Color of controlling corners of an object (when it's active)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cornerDashArray",
   "hash": "#cornerDashArray",
   "desc": "Array specifying dash pattern of an object's control (hasBorder must be true)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cornerSize",
   "hash": "#cornerSize",
   "desc": "Size of object's controlling corners (in pixels)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cornerStrokeColor",
   "hash": "#cornerStrokeColor",
   "desc": "Color of controlling corners of an object (when it's active and transparentCorners false)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "cornerStyle",
   "hash": "#cornerStyle",
   "desc": "Specify style of control, 'rect' or 'circle'",
   "file": 59
  },
  {
   "section": "Members",
   "name": "dirty",
   "hash": "#dirty",
   "desc": "When set to `true`, object's cache will be rerendered next render call. since 1.7.0",
   "file": 59
  },
  {
   "section": "Members",
   "name": "evented",
   "hash": "#evented",
   "desc": "When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4",
   "file": 59
  },
  {
   "section": "Members",
   "name": "excludeFromExport",
   "hash": "#excludeFromExport",
   "desc": "When `true`, object is not exported in OBJECT/JSON",
   "file": 59
  },
  {
   "section": "Members",
   "name": "fill",
   "hash": "#fill",
   "desc": "Color of object's fill takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 59
  },
  {
   "section": "Members",
   "name": "fillRule",
   "hash": "#fillRule",
   "desc": "Fill rule used to fill an object accepted values are nonzero, evenodd",
   "file": 59
  },
  {
   "section": "Members",
   "name": "flipX",
   "hash": "#flipX",
   "desc": "When true, an object is rendered as flipped horizontally",
   "file": 59
  },
  {
   "section": "Members",
   "name": "flipY",
   "hash": "#flipY",
   "desc": "When true, an object is rendered as flipped vertically",
   "file": 59
  },
  {
   "section": "Members",
   "name": "globalCompositeOperation",
   "hash": "#globalCompositeOperation",
   "desc": "Composite rule used for canvas globalCompositeOperation",
   "file": 59
  },
  {
   "section": "Members",
   "name": "hasBorders",
   "hash": "#hasBorders",
   "desc": "When set to `false`, object's controlling borders are not rendered",
   "file": 59
  },
  {
   "section": "Members",
   "name": "hasControls",
   "hash": "#hasControls",
   "desc": "When set to `false`, object's controls are not displayed and can not be used to manipulate object",
   "file": 59
  },
  {
   "section": "Members",
   "name": "height",
   "hash": "#height",
   "desc": "Height is set to 100 to compensate the old initialize code that was setting it to 100",
   "file": 59
  },
  {
   "section": "Members",
   "name": "hoverCursor",
   "hash": "#hoverCursor",
   "desc": "Default cursor value used when hovering over this object on canvas",
   "file": 59
  },
  {
   "section": "Members",
   "name": "includeDefaultValues",
   "hash": "#includeDefaultValues",
   "desc": "When `false`, default object's values are not included in its serialization",
   "file": 59
  },
  {
   "section": "Members",
   "name": "inverted",
   "hash": "#inverted",
   "desc": "Meaningful ONLY when the object is used as clipPath. if true, the clipPath will make the object clip to the outside of the clipPath since 2.4.0",
   "file": 59
  },
  {
   "section": "Members",
   "name": "left",
   "hash": "#left",
   "desc": "Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lineCoords",
   "hash": "#lineCoords",
   "desc": "Describe object's corner position in canvas element coordinates. includes padding. Used of object detection. set and refreshed with setCoords.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockMovementX",
   "hash": "#lockMovementX",
   "desc": "When `true`, object horizontal movement is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockMovementY",
   "hash": "#lockMovementY",
   "desc": "When `true`, object vertical movement is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockRotation",
   "hash": "#lockRotation",
   "desc": "When `true`, object rotation is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "When `true`, object cannot be flipped by scaling into negative values",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockScalingX",
   "hash": "#lockScalingX",
   "desc": "When `true`, object horizontal scaling is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockScalingY",
   "hash": "#lockScalingY",
   "desc": "When `true`, object vertical scaling is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockSkewingX",
   "hash": "#lockSkewingX",
   "desc": "When `true`, object horizontal skewing is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "lockSkewingY",
   "hash": "#lockSkewingY",
   "desc": "When `true`, object vertical skewing is locked",
   "file": 59
  },
  {
   "section": "Members",
   "name": "matrixCache",
   "hash": "#matrixCache",
   "desc": "storage for object full transform matrix",
   "file": 59
  },
  {
   "section": "Members",
   "name": "minScaleLimit",
   "hash": "#minScaleLimit",
   "desc": "Minimum allowed scale value of an object",
   "file": 59
  },
  {
   "section": "Members",
   "name": "moveCursor",
   "hash": "#moveCursor",
   "desc": "Default cursor value used when moving this object on canvas",
   "file": 59
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "When `true`, cache does not get updated during scaling. The picture will get blocky if scaled too much and will be redrawn with correct details at the end of scaling. this setting is performance and application dependant. default to true since 1.7.0",
   "file": 59
  },
  {
   "section": "Members",
   "name": "objectCaching",
   "hash": "#objectCaching",
   "desc": "When `true`, object is cached on an additional canvas. When `false`, object is not cached unless necessary ( clipPath ) default to true",
   "file": 59
  },
  {
   "section": "Members",
   "name": "oCoords",
   "hash": "#oCoords",
   "desc": "Describe object's corner position in canvas element coordinates. properties are depending on control keys and padding the main controls. each property is an object with x, y and corner. The `corner` property contains in a similar manner the 4 points of the interactive area of the corner. The coordinates depends from the controls positionHandler and are used to draw and locate controls",
   "file": 59
  },
  {
   "section": "Members",
   "name": "opacity",
   "hash": "#opacity",
   "desc": "Opacity of an object",
   "file": 59
  },
  {
   "section": "Members",
   "name": "originX",
   "hash": "#originX",
   "desc": "Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 59
  },
  {
   "section": "Members",
   "name": "originY",
   "hash": "#originY",
   "desc": "Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\") See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups",
   "file": 59
  },
  {
   "section": "Members",
   "name": "ownMatrixCache",
   "hash": "#ownMatrixCache",
   "desc": "storage for object transform matrix",
   "file": 59
  },
  {
   "section": "Members",
   "name": "padding",
   "hash": "#padding",
   "desc": "Padding between object and its controlling borders (in pixels)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "paintFirst",
   "hash": "#paintFirst",
   "desc": "Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")",
   "file": 59
  },
  {
   "section": "Members",
   "name": "perPixelTargetFind",
   "hash": "#perPixelTargetFind",
   "desc": "When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box",
   "file": 59
  },
  {
   "section": "Members",
   "name": "scaleX",
   "hash": "#scaleX",
   "desc": "Object scale factor (horizontal)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "scaleY",
   "hash": "#scaleY",
   "desc": "Object scale factor (vertical)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "selectable",
   "hash": "#selectable",
   "desc": "When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection). But events still fire on it.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "selectionBackgroundColor",
   "hash": "#selectionBackgroundColor",
   "desc": "Selection Background color of an object. colored layer behind the object when it is active. does not mix good with globalCompositeOperation methods.",
   "file": 59
  },
  {
   "section": "Members",
   "name": "shadow",
   "hash": "#shadow",
   "desc": "Shadow object representing shadow of this shape",
   "file": 59
  },
  {
   "section": "Members",
   "name": "skewX",
   "hash": "#skewX",
   "desc": "Angle of skew on x axes of an object (in degrees)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "skewY",
   "hash": "#skewY",
   "desc": "Angle of skew on y axes of an object (in degrees)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "statefullCache",
   "hash": "#statefullCache",
   "desc": "When `true`, object properties are checked for cache invalidation. In some particular situation you may want this to be disabled ( spray brush, very big, groups) or if your application does not allow you to modify properties for groups child you want to disable it for groups. default to false since 1.7.0",
   "file": 59
  },
  {
   "section": "Members",
   "name": "stateProperties",
   "hash": "#stateProperties",
   "desc": "List of properties to consider when checking if state of an object is changed (fabric.Object#hasStateChanged) as well as for history (undo/redo) purposes",
   "file": 59
  },
  {
   "section": "Members",
   "name": "stroke",
   "hash": "#stroke",
   "desc": "When defined, an object is rendered via stroke and this property specifies its color takes css colors https://www.w3.org/TR/css-color-3/",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeDashArray",
   "hash": "#strokeDashArray",
   "desc": "Array specifying dash pattern of an object's stroke (stroke must be defined)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeDashOffset",
   "hash": "#strokeDashOffset",
   "desc": "Line offset of an object's stroke",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeLineCap",
   "hash": "#strokeLineCap",
   "desc": "Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeLineJoin",
   "hash": "#strokeLineJoin",
   "desc": "Corner style of an object's stroke (one of \"bevel\", \"round\", \"miter\")",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeMiterLimit",
   "hash": "#strokeMiterLimit",
   "desc": "Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeUniform",
   "hash": "#strokeUniform",
   "desc": "When `false`, the stoke width will scale with the object. When `true`, the stroke will always match the exact pixel size entered for stroke width. this Property does not work on Text classes or drawing call that uses strokeText,fillText methods default to false",
   "file": 59
  },
  {
   "section": "Members",
   "name": "strokeWidth",
   "hash": "#strokeWidth",
   "desc": "Width of a stroke used to render this object",
   "file": 59
  },
  {
   "section": "Members",
   "name": "top",
   "hash": "#top",
   "desc": "Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}",
   "file": 59
  },
  {
   "section": "Members",
   "name": "touchCornerSize",
   "hash": "#touchCornerSize",
   "desc": "Size of object's controlling corners when touch interaction is detected",
   "file": 59
  },
  {
   "section": "Members",
   "name": "transparentCorners",
   "hash": "#transparentCorners",
   "desc": "When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)",
   "file": 59
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 59
  },
  {
   "section": "Members",
   "name": "visible",
   "hash": "#visible",
   "desc": "When set to `false`, an object is not rendered on canvas",
   "file": 59
  },
  {
   "section": "Members",
   "name": "width",
   "hash": "#width",
   "desc": "Width is set to 100 to compensate the old initialize code that was setting it to 100",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "fromObject",
   "hash": "#.fromObject",
   "desc": "Returns",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_calcRotateMatrix",
   "hash": "#_calcRotateMatrix",
   "desc": "calculate rotation matrix of an object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_calcTranslateMatrix",
   "hash": "#_calcTranslateMatrix",
   "desc": "calculate the translation matrix for an object transform",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_drawClipPath",
   "hash": "#_drawClipPath",
   "desc": "Prepare clipPath state and cache and draw it on instance's cache",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_getCoords",
   "hash": "#_getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_limitCacheSize",
   "hash": "#_limitCacheSize",
   "desc": "Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal and each side do not cross fabric.cacheSideLimit those numbers are configurable so that you can get as much detail as you want making bargain with performances.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_removeCacheCanvas",
   "hash": "#_removeCacheCanvas",
   "desc": "Remove cacheCanvas and its dimensions from the objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_renderControls",
   "hash": "#_renderControls",
   "desc": "Renders controls and borders for the object the context here is not transformed",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_setupCompositeOperation",
   "hash": "#_setupCompositeOperation",
   "desc": "Sets canvas globalCompositeOperation for specific object custom composition operation for the particular object can be specified using globalCompositeOperation property",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "_toSVG",
   "hash": "#_toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "adjustPosition",
   "hash": "#adjustPosition",
   "desc": null,
   "file": 59
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#animate",
   "desc": "Animates object's properties",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "bringForward",
   "hash": "#bringForward",
   "desc": "Moves an object up in stack of drawn objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "bringToFront",
   "hash": "#bringToFront",
   "desc": "Moves an object to the top of the stack of drawn objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "calcOwnMatrix",
   "hash": "#calcOwnMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties, this matrix does not include the group transformation",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "calcTransformMatrix",
   "hash": "#calcTransformMatrix",
   "desc": "calculate transform matrix that represents the current transformations from the object's properties.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "center",
   "hash": "#center",
   "desc": "Centers object vertically and horizontally on canvas to which is was added last You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "centerH",
   "hash": "#centerH",
   "desc": "Centers object horizontally on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "centerV",
   "hash": "#centerV",
   "desc": "Centers object vertically on canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#clone",
   "desc": "Clones an instance, using a callback method will work for every object.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "cloneAsImage",
   "hash": "#cloneAsImage",
   "desc": "Creates an instance of fabric.Image out of an object makes use of toCanvasElement. Once this method was based on toDataUrl and loadImage, so it also had a quality and format option. toCanvasElement is faster and produce no loss of quality. If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it. toCanvasElement and then toBlob from the obtained canvas is also a good option. This method is sync now, but still support the callback because we did not want to break. When fabricJS 5.0 will be planned, this will probably be changed to not have a callback.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "complexity",
   "hash": "#complexity",
   "desc": "Returns complexity of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "containsPoint",
   "hash": "#containsPoint",
   "desc": "Checks if point is inside the object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "dispose",
   "hash": "#dispose",
   "desc": "cancel instance's running animations",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawBorders",
   "hash": "#drawBorders",
   "desc": "Draws borders of an object's bounding box. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawBordersInGroup",
   "hash": "#drawBordersInGroup",
   "desc": "Draws borders of an object's bounding box when it is inside a group. Requires public properties: width, height Requires public options: padding, borderColor",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawCacheOnCanvas",
   "hash": "#drawCacheOnCanvas",
   "desc": "Paint the cached copy of the object on the target context.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawClipPathOnCache",
   "hash": "#drawClipPathOnCache",
   "desc": "Execute the drawing operation for an object clipPath",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawControls",
   "hash": "#drawControls",
   "desc": "Draws corners of an object's bounding box. Requires public properties: width, height Requires public options: cornerSize, padding",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawObject",
   "hash": "#drawObject",
   "desc": "Execute the drawing operation for an object on a specified context",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "drawSelectionBackground",
   "hash": "#drawSelectionBackground",
   "desc": "Draws a colored layer behind the object, inside its selection borders. Requires public options: padding, selectionBackgroundColor this function is called when the context is transformed has checks to be skipped when the object is on a staticCanvas",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "forEachControl",
   "hash": "#forEachControl",
   "desc": "Calls a function for each control. The function gets called, with the control, the object that is calling the iterator and the control's key",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "fxStraighten",
   "hash": "#fxStraighten",
   "desc": "Same as fabric.Object.prototype.straighten but with animation",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getBoundingRect",
   "hash": "#getBoundingRect",
   "desc": "Returns coordinates of object's bounding rectangle (left, top, width, height) the box is intended as aligned to axis of canvas.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getCenterPoint",
   "hash": "#getCenterPoint",
   "desc": "Returns the real center coordinates of the object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getCoords",
   "hash": "#getCoords",
   "desc": "return correct set of coordinates for intersection this will return either aCoords or lineCoords. The coords are returned in an array.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getLocalPointer",
   "hash": "#getLocalPointer",
   "desc": "Returns coordinates of a pointer relative to an object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getObjectOpacity",
   "hash": "#getObjectOpacity",
   "desc": "Return the object opacity counting also the group property",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getObjectScaling",
   "hash": "#getObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getPointByOrigin",
   "hash": "#getPointByOrigin",
   "desc": "Returns the coordinates of the object as if it has a different origin",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getScaledHeight",
   "hash": "#getScaledHeight",
   "desc": "Returns height of an object bounding box counting transformations before 2.0 it was named getHeight();",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getScaledWidth",
   "hash": "#getScaledWidth",
   "desc": "Returns width of an object's bounding box counting transformations before 2.0 it was named getWidth();",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgCommons",
   "hash": "#getSvgCommons",
   "desc": "Returns id attribute for svg output",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgFilter",
   "hash": "#getSvgFilter",
   "desc": "Returns filter for svg shadow",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgSpanStyles",
   "hash": "#getSvgSpanStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgStyles",
   "hash": "#getSvgStyles",
   "desc": "Returns styles-string for svg-export",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgTextDecoration",
   "hash": "#getSvgTextDecoration",
   "desc": "Returns text-decoration property for svg-export",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getSvgTransform",
   "hash": "#getSvgTransform",
   "desc": "Returns transform-string for svg-export",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getTotalObjectScaling",
   "hash": "#getTotalObjectScaling",
   "desc": "Return the object scale factor counting also the group scaling, zoom and retina",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "getViewportTransform",
   "hash": "#getViewportTransform",
   "desc": "Retrieves viewportTransform from Object's canvas if possible",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "hasFill",
   "hash": "#hasFill",
   "desc": "return true if the object will draw a fill Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when fill happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the fill is invisible.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "hasStateChanged",
   "hash": "#hasStateChanged",
   "desc": "Returns true if object state (one of its state properties) was changed",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "hasStroke",
   "hash": "#hasStroke",
   "desc": "return true if the object will draw a stroke Does not consider text styles. This is just a shortcut used at rendering time We want it to be an approximation and be fast. wrote to avoid extra caching, it has to return true when stroke happens, can guess when it will not happen at 100% chance, does not matter if it misses some use case where the stroke is invisible.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "initialize",
   "hash": "#initialize",
   "desc": "Constructor",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "intersectsWithObject",
   "hash": "#intersectsWithObject",
   "desc": "Checks if object intersects with another object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "intersectsWithRect",
   "hash": "#intersectsWithRect",
   "desc": "Checks if object intersects with an area formed by 2 points",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isCacheDirty",
   "hash": "#isCacheDirty",
   "desc": "Check if cache is dirty",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isContainedWithinObject",
   "hash": "#isContainedWithinObject",
   "desc": "Checks if object is fully contained within area of another object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isContainedWithinRect",
   "hash": "#isContainedWithinRect",
   "desc": "Checks if object is fully contained within area formed by 2 points",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isControlVisible",
   "hash": "#isControlVisible",
   "desc": "Returns true if the specified control is visible, false otherwise.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isOnScreen",
   "hash": "#isOnScreen",
   "desc": "Checks if object is contained within the canvas with current viewportTransform the check is done stopping at first point that appears on screen",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isPartiallyOnScreen",
   "hash": "#isPartiallyOnScreen",
   "desc": "Checks if object is partially contained within the canvas with current viewportTransform",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "isType",
   "hash": "#isType",
   "desc": "Returns true if specified type is identical to the type of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "moveTo",
   "hash": "#moveTo",
   "desc": "Moves an object to specified level in stack of drawn objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "needsItsOwnCache",
   "hash": "#needsItsOwnCache",
   "desc": "When set to `true`, force the object to have its own cache, even if it is inside a group it may be needed when your object behave in a particular way on the cache and always needs its own isolated canvas to render correctly. Created to be overridden since 1.7.12",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "onDeselect",
   "hash": "#onDeselect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to deselect this object. If the function returns true, the process is cancelled",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "onSelect",
   "hash": "#onSelect",
   "desc": "This callback function is called every time _discardActiveObject or _setActiveObject try to to select this object. If the function returns true, the process is cancelled",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "render",
   "hash": "#render",
   "desc": "Renders an object on a specified context",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "rotate",
   "hash": "#rotate",
   "desc": "Sets \"angle\" of an instance with centered rotation",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "saveState",
   "hash": "#saveState",
   "desc": "Saves state of an object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "scale",
   "hash": "#scale",
   "desc": "Scales an object (equally by x and y)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "scaleToHeight",
   "hash": "#scaleToHeight",
   "desc": "Scales an object to a given height, with respect to bounding box (scaling by x/y equally)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "scaleToWidth",
   "hash": "#scaleToWidth",
   "desc": "Scales an object to a given width, with respect to bounding box (scaling by x/y equally)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "sendBackwards",
   "hash": "#sendBackwards",
   "desc": "Moves an object down in stack of drawn objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "sendToBack",
   "hash": "#sendToBack",
   "desc": "Moves an object to the bottom of the stack of drawn objects",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setControlsVisibility",
   "hash": "#setControlsVisibility",
   "desc": "Sets the visibility state of object controls.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setControlVisible",
   "hash": "#setControlVisible",
   "desc": "Sets the visibility of the specified control.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setCoords",
   "hash": "#setCoords",
   "desc": "Sets corner and controls position coordinates based on current angle, width and height, left and top. oCoords are used to find the corners aCoords are used to quickly find an object on the canvas lineCoords are used to quickly find object during pointer events. See",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setOnGroup",
   "hash": "#setOnGroup",
   "desc": "This callback function is called by the parent group of an object every time a non-delegated property changes on the group. It is passed the key and value as parameters. Not adding in this function's signature to avoid Travis build error about unused variables.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setOptions",
   "hash": "#setOptions",
   "desc": "Sets object's properties from options",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setPositionByOrigin",
   "hash": "#setPositionByOrigin",
   "desc": "Sets the position of the object taking into consideration the object's origin",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "setupState",
   "hash": "#setupState",
   "desc": "Setups state of an object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "shouldCache",
   "hash": "#shouldCache",
   "desc": "Decide if the object should cache or not. Create its own cache level objectCaching is a global flag, wins over everything needsItsOwnCache should be used when the object drawing method requires a cache step. None of the fabric classes requires it. Generally you do not cache objects in groups because the group outside is cached. Read as: cache if is needed, or if the feature is enabled but we are not already caching.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "straighten",
   "hash": "#straighten",
   "desc": "Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toCanvasElement",
   "hash": "#toCanvasElement",
   "desc": "Converts an object into a HTMLCanvas element",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toClipPathSVG",
   "hash": "#toClipPathSVG",
   "desc": "Returns svg clipPath representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toDatalessObject",
   "hash": "#toDatalessObject",
   "desc": "Returns (dataless) object representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#toDataURL",
   "desc": "Converts an object into a data-url-like string",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toJSON",
   "hash": "#toJSON",
   "desc": "Returns a JSON representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toLocalPoint",
   "hash": "#toLocalPoint",
   "desc": "Returns the point in local coordinates",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns an object representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toString",
   "hash": "#toString",
   "desc": "Returns a string representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "toSVG",
   "hash": "#toSVG",
   "desc": "Returns svg representation of an instance",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "transform",
   "hash": "#transform",
   "desc": "Transforms context when rendering an object",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "translateToCenterPoint",
   "hash": "#translateToCenterPoint",
   "desc": "Translates the coordinates from origin to center coordinates (based on the object's dimensions)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "translateToGivenOrigin",
   "hash": "#translateToGivenOrigin",
   "desc": "Translates the coordinates from a set of origin to another (based on the object's dimensions)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "translateToOriginPoint",
   "hash": "#translateToOriginPoint",
   "desc": "Translates the coordinates from center to origin coordinates (based on the object's dimensions)",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "viewportCenter",
   "hash": "#viewportCenter",
   "desc": "Centers object on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "viewportCenterH",
   "hash": "#viewportCenterH",
   "desc": "Centers object horizontally on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "viewportCenterV",
   "hash": "#viewportCenterV",
   "desc": "Centers object vertically on current viewport of canvas to which it was added last. You might need to call `setCoords` on an object after centering, to update controls area.",
   "file": 59
  },
  {
   "section": "Methods",
   "name": "willDrawShadow",
   "hash": "#willDrawShadow",
   "desc": "Check if this object or a child object will cast a shadow used by Group.shouldCache to know if child has a shadow recursively",
   "file": 59
  },
  {
   "section": "Members",
   "name": "arcToSegmentsCache",
   "hash": "#.arcToSegmentsCache",
   "desc": "This object contains the result of arc to bezier conversion for faster retrieving if the same arc needs to be converted again. It was an internal variable, is accessible since version 2.3.4",
   "file": 60
  },
  {
   "section": "Members",
   "name": "boundsOfCurveCache",
   "hash": "#.boundsOfCurveCache",
   "desc": "This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it. It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing you do not get any speed benefit and you get a big object in memory. The object was a private variable before, while now is appended to the lib so that you have access to it and you can eventually clear it. It was an internal variable, is accessible since version 2.3.4",
   "file": 60
  },
  {
   "section": "Members",
   "name": "browserShadowBlurConstant",
   "hash": "#.browserShadowBlurConstant",
   "desc": "Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value, which is unitless and not rendered equally across browsers.  Values that work quite well (as of October 2017) are: - Chrome: 1.5 - Edge: 1.75 - Firefox: 0.9 - Safari: 0.95",
   "file": 60
  },
  {
   "section": "Members",
   "name": "cachesBoundsOfCurve",
   "hash": "#.cachesBoundsOfCurve",
   "desc": "If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better",
   "file": 60
  },
  {
   "section": "Members",
   "name": "charWidthsCache",
   "hash": "#.charWidthsCache",
   "desc": "Cache Object for widths of chars in text rendering.",
   "file": 60
  },
  {
   "section": "Members",
   "name": "devicePixelRatio",
   "hash": "#.devicePixelRatio",
   "desc": "Device Pixel Ratio",
   "file": 60
  },
  {
   "section": "Members",
   "name": "disableStyleCopyPaste",
   "hash": "#.disableStyleCopyPaste",
   "desc": "When 'true', style information is not retained when copy/pasting text, making pasted text use destination style. Defaults to 'false'.",
   "file": 60
  },
  {
   "section": "Members",
   "name": "DPI",
   "hash": "#.DPI",
   "desc": "Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.",
   "file": 60
  },
  {
   "section": "Members",
   "name": "enableGLFiltering",
   "hash": "#.enableGLFiltering",
   "desc": "Enable webgl for filtering picture is available A filtering backend will be initialized, this will both take memory and time since a default 2048x2048 canvas will be created for the gl context",
   "file": 60
  },
  {
   "section": "Members",
   "name": "forceGLPutImageData",
   "hash": "#.forceGLPutImageData",
   "desc": "Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true this has to be set before instantiating the filtering backend ( before filtering the first image )",
   "file": 60
  },
  {
   "section": "Members",
   "name": "isLikelyNode",
   "hash": "#.isLikelyNode",
   "desc": "True when in environment that's probably Node.js",
   "file": 60
  },
  {
   "section": "Members",
   "name": "isTouchSupported",
   "hash": "#.isTouchSupported",
   "desc": "True when in environment that supports touch events",
   "file": 60
  },
  {
   "section": "Members",
   "name": "log",
   "hash": "#.log",
   "desc": "Wrapper around `console.log` (when available)",
   "file": 60
  },
  {
   "section": "Members",
   "name": "maxCacheSideLimit",
   "hash": "#.maxCacheSideLimit",
   "desc": "Pixel limit for cache canvases width or height. IE fixes the maximum at 5000",
   "file": 60
  },
  {
   "section": "Members",
   "name": "minCacheSideLimit",
   "hash": "#.minCacheSideLimit",
   "desc": "Lowest pixel limit for cache canvases, set at 256PX",
   "file": 60
  },
  {
   "section": "Members",
   "name": "perfLimitSizeTotal",
   "hash": "#.perfLimitSizeTotal",
   "desc": "Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.",
   "file": 60
  },
  {
   "section": "Members",
   "name": "RUNNING_ANIMATIONS",
   "hash": "#.RUNNING_ANIMATIONS",
   "desc": "Array holding all running animations",
   "file": 60
  },
  {
   "section": "Members",
   "name": "SHARED_ATTRIBUTES",
   "hash": "#.SHARED_ATTRIBUTES",
   "desc": "Attributes parsed from all SVG elements",
   "file": 60
  },
  {
   "section": "Members",
   "name": "textureSize",
   "hash": "#.textureSize",
   "desc": "if webgl is enabled and available, textureSize will determine the size of the canvas backend",
   "file": 60
  },
  {
   "section": "Members",
   "name": "warn",
   "hash": "#.warn",
   "desc": "Wrapper around `console.warn` (when available)",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "getCSSRules",
   "hash": "#.getCSSRules",
   "desc": "Returns CSS rules for a given SVG document",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "getGradientDefs",
   "hash": "#.getGradientDefs",
   "desc": "Parses an SVG document, returning all of the gradient declarations found in it",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "isWebglSupported",
   "hash": "#.isWebglSupported",
   "desc": "Indicate whether this filtering backend is supported by the user's browser.",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "loadSVGFromString",
   "hash": "#.loadSVGFromString",
   "desc": "Takes string corresponding to an SVG document, and parses it into a set of fabric objects",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "loadSVGFromURL",
   "hash": "#.loadSVGFromURL",
   "desc": "Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseAttributes",
   "hash": "#.parseAttributes",
   "desc": "Returns an object of attributes' name/value, given element and an array of attribute names; Parses parent \"g\" nodes recursively upwards.",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseElements",
   "hash": "#.parseElements",
   "desc": "Transforms an array of svg elements to corresponding fabric.* instances",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseFontDeclaration",
   "hash": "#.parseFontDeclaration",
   "desc": "Parses a short font declaration, building adding its properties to a style object",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parsePointsAttribute",
   "hash": "#.parsePointsAttribute",
   "desc": "Parses \"points\" attribute, returning an array of values",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseStyleAttribute",
   "hash": "#.parseStyleAttribute",
   "desc": "Parses \"style\" attribute, retuning an object with values",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseSVGDocument",
   "hash": "#.parseSVGDocument",
   "desc": "Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "parseTransformAttribute",
   "hash": "#.parseTransformAttribute",
   "desc": "Parses \"transform\" attribute, returning an array of values",
   "file": 60
  },
  {
   "section": "Methods",
   "name": "invoke",
   "hash": "#.invoke",
   "desc": "Invokes method on all items in a given array",
   "file": 62
  },
  {
   "section": "Methods",
   "name": "max",
   "hash": "#.max",
   "desc": "Finds maximum value in array (not necessarily \"first\" one)",
   "file": 62
  },
  {
   "section": "Methods",
   "name": "min",
   "hash": "#.min",
   "desc": "Finds minimum value in array (not necessarily \"first\" one)",
   "file": 62
  },
  {
   "section": "Methods",
   "name": "easeInBack",
   "hash": "#.easeInBack",
   "desc": "Backwards easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInBounce",
   "hash": "#.easeInBounce",
   "desc": "Bouncing easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInCirc",
   "hash": "#.easeInCirc",
   "desc": "Circular easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInCubic",
   "hash": "#.easeInCubic",
   "desc": "Cubic easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInElastic",
   "hash": "#.easeInElastic",
   "desc": "Elastic easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInExpo",
   "hash": "#.easeInExpo",
   "desc": "Exponential easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutBack",
   "hash": "#.easeInOutBack",
   "desc": "Backwards easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutBounce",
   "hash": "#.easeInOutBounce",
   "desc": "Bouncing easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutCirc",
   "hash": "#.easeInOutCirc",
   "desc": "Circular easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutCubic",
   "hash": "#.easeInOutCubic",
   "desc": "Cubic easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutElastic",
   "hash": "#.easeInOutElastic",
   "desc": "Elastic easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutExpo",
   "hash": "#.easeInOutExpo",
   "desc": "Exponential easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutQuad",
   "hash": "#.easeInOutQuad",
   "desc": "Quadratic easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutQuart",
   "hash": "#.easeInOutQuart",
   "desc": "Quartic easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutQuint",
   "hash": "#.easeInOutQuint",
   "desc": "Quintic easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInOutSine",
   "hash": "#.easeInOutSine",
   "desc": "Sinusoidal easing in and out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInQuad",
   "hash": "#.easeInQuad",
   "desc": "Quadratic easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInQuart",
   "hash": "#.easeInQuart",
   "desc": "Quartic easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInQuint",
   "hash": "#.easeInQuint",
   "desc": "Quintic easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeInSine",
   "hash": "#.easeInSine",
   "desc": "Sinusoidal easing in",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutBack",
   "hash": "#.easeOutBack",
   "desc": "Backwards easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutBounce",
   "hash": "#.easeOutBounce",
   "desc": "Bouncing easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutCirc",
   "hash": "#.easeOutCirc",
   "desc": "Circular easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutCubic",
   "hash": "#.easeOutCubic",
   "desc": "Cubic easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutElastic",
   "hash": "#.easeOutElastic",
   "desc": "Elastic easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutExpo",
   "hash": "#.easeOutExpo",
   "desc": "Exponential easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutQuad",
   "hash": "#.easeOutQuad",
   "desc": "Quadratic easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutQuart",
   "hash": "#.easeOutQuart",
   "desc": "Quartic easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutQuint",
   "hash": "#.easeOutQuint",
   "desc": "Quintic easing out",
   "file": 63
  },
  {
   "section": "Methods",
   "name": "easeOutSine",
   "hash": "#.easeOutSine",
   "desc": "Sinusoidal easing out",
   "file": 63
  },
  {
   "section": "Members",
   "name": "getElementStyle",
   "hash": "#.getElementStyle",
   "desc": "Returns style attribute value of a given element",
   "file": 64
  },
  {
   "section": "Members",
   "name": "setImageSmoothing",
   "hash": "#.setImageSmoothing",
   "desc": "setImageSmoothing sets the context imageSmoothingEnabled property. Used by canvas and by ImageObject.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "addClass",
   "hash": "#.addClass",
   "desc": "Adds class to an element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "addListener",
   "hash": "#.addListener",
   "desc": "Adds an event listener to an element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "addTransformToObject",
   "hash": "#.addTransformToObject",
   "desc": "given an object and a transform, apply the transform to the object. this is equivalent to change the space where the object is drawn. Adding to an object a transform that scale by 2 is like scaling it by 2. This is used when removing an object from an active selection for example.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "animate",
   "hash": "#.animate",
   "desc": "Changes value from one to another within certain period of time, invoking callbacks as value is being changed.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "animateColor",
   "hash": "#.animateColor",
   "desc": "Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "applyTransformToObject",
   "hash": "#.applyTransformToObject",
   "desc": "discard an object transform state and apply the one from the matrix.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "calcAngleBetweenVectors",
   "hash": "#.calcAngleBetweenVectors",
   "desc": "Calculates angle between 2 vectors using dot product",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "calcDimensionsMatrix",
   "hash": "#.calcDimensionsMatrix",
   "desc": "Returns a transform matrix starting from an object of the same kind of the one returned from qrDecompose, useful also if you want to calculate some transformations from an object that is not enlived yet. is called DimensionsTransformMatrix because those properties are the one that influence the size of the resulting box of the object.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "calcRotateMatrix",
   "hash": "#.calcRotateMatrix",
   "desc": "Returns a transform matrix starting from an object of the same kind of the one returned from qrDecompose, useful also if you want to calculate some transformations from an object that is not enlived yet",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "clearFabricFontCache",
   "hash": "#.clearFabricFontCache",
   "desc": "Clear char widths cache for the given font family or all the cache if no fontFamily is specified. Use it if you know you are loading fonts in a lazy way and you are not waiting for custom fonts to load properly when adding text objects to the canvas. If a text object is added when its own font is not loaded yet, you will get wrong measurement and so wrong bounding boxes. After the font cache is cleared, either change the textObject text content or call initDimensions() to trigger a recalculation",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "composeMatrix",
   "hash": "#.composeMatrix",
   "desc": "Returns a transform matrix starting from an object of the same kind of the one returned from qrDecompose, useful also if you want to calculate some transformations from an object that is not enlived yet",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "copyCanvasElement",
   "hash": "#.copyCanvasElement",
   "desc": "Creates a canvas element that is a copy of another and is also painted",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "cos",
   "hash": "#.cos",
   "desc": "Calculate the cos of an angle, avoiding returning floats for known results",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "createCanvasElement",
   "hash": "#.createCanvasElement",
   "desc": "Creates canvas element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "createClass",
   "hash": "#.createClass",
   "desc": "Helper for creation of \"classes\".",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "createImage",
   "hash": "#.createImage",
   "desc": "Creates image element (works on client and node)",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "degreesToRadians",
   "hash": "#.degreesToRadians",
   "desc": "Transforms degrees to radians.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "enlivenObjectEnlivables",
   "hash": "#.enlivenObjectEnlivables",
   "desc": "Creates corresponding fabric instances residing in an object, e.g. `clipPath`",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "enlivenObjects",
   "hash": "#.enlivenObjects",
   "desc": "Creates corresponding fabric instances from their object representations",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "enlivenPatterns",
   "hash": "#.enlivenPatterns",
   "desc": "Create and wait for loading of patterns",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "falseFunction",
   "hash": "#.falseFunction",
   "desc": "Function which always returns `false`.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "findScaleToCover",
   "hash": "#.findScaleToCover",
   "desc": "Finds the scale for the object source to cover entirely the object destination, keeping aspect ratio intact. respect the total allowed area for the cache.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "findScaleToFit",
   "hash": "#.findScaleToFit",
   "desc": "Finds the scale for the object source to fit inside the object destination, keeping aspect ratio intact. respect the total allowed area for the cache.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getBisector",
   "hash": "#.getBisector",
   "desc": null,
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getById",
   "hash": "#.getById",
   "desc": "Takes id and returns an element with that id (if one exists in a document)",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getElementOffset",
   "hash": "#.getElementOffset",
   "desc": "Returns offset for a given element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getHatVector",
   "hash": "#.getHatVector",
   "desc": null,
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getKlass",
   "hash": "#.getKlass",
   "desc": "Returns klass \"Class\" object of given namespace",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getRandomInt",
   "hash": "#.getRandomInt",
   "desc": "Returns random number between 2 specified ones.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getScrollLeftTop",
   "hash": "#.getScrollLeftTop",
   "desc": "Returns element scroll offsets",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "getSvgAttributes",
   "hash": "#.getSvgAttributes",
   "desc": "Returns array of attributes for given svg that fabric parses",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "groupSVGElements",
   "hash": "#.groupSVGElements",
   "desc": "Groups SVG elements (usually those retrieved from SVG document)",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "invertTransform",
   "hash": "#.invertTransform",
   "desc": "Invert transformation t",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "isTransparent",
   "hash": "#.isTransparent",
   "desc": "Returns true if context has transparent pixel at specified location (taking tolerance into account)",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "joinPath",
   "hash": "#.joinPath",
   "desc": "Join path commands to go back to svg format",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "limitDimsByArea",
   "hash": "#.limitDimsByArea",
   "desc": "Given current aspect ratio, determines the max width and height that can respect the total allowed area for the cache.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "loadImage",
   "hash": "#.loadImage",
   "desc": "Loads image element from given url and passes it to a callback",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "loadImageInDom",
   "hash": "#.loadImageInDom",
   "desc": "Attaches SVG image with data: URL to the dom",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "makeBoundingBoxFromPoints",
   "hash": "#.makeBoundingBoxFromPoints",
   "desc": "Returns coordinates of points's bounding rectangle (left, top, width, height)",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "makeElement",
   "hash": "#.makeElement",
   "desc": "Creates specified element with specified attributes",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "makeElementSelectable",
   "hash": "#.makeElementSelectable",
   "desc": "Makes element selectable",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "makeElementUnselectable",
   "hash": "#.makeElementUnselectable",
   "desc": "Makes element unselectable",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "matrixToSVG",
   "hash": "#.matrixToSVG",
   "desc": "given an array of 6 number returns something like `\"matrix(...numbers)\"`",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "mergeClipPaths",
   "hash": "#.mergeClipPaths",
   "desc": "Merges 2 clip paths into one visually equal clip path  **IMPORTANT**:\\ Does **NOT** clone the arguments, clone them proir if necessary.  Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap. Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.  In order to handle the `inverted` property we follow logic described in the following cases:\\ **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\ **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\ **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "multiplyTransformMatrices",
   "hash": "#.multiplyTransformMatrices",
   "desc": "Multiply matrix A by matrix B to nest transformations",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "parsePreserveAspectRatioAttribute",
   "hash": "#.parsePreserveAspectRatioAttribute",
   "desc": "Parse preserveAspectRatio attribute from element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "parseUnit",
   "hash": "#.parseUnit",
   "desc": "Converts from attribute value to pixel value if applicable. Returns converted pixels or original value not converted.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "populateWithProperties",
   "hash": "#.populateWithProperties",
   "desc": "Populates an object with properties of another object",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "projectStrokeOnPoints",
   "hash": "#.projectStrokeOnPoints",
   "desc": "Project stroke width on points returning 2 projections for each point as follows: - `miter`: 2 points corresponding to the outer boundary and the inner boundary of stroke. - `bevel`: 2 points corresponding to the bevel boundaries, tangent to the bisector. - `round`: same as `bevel` Used to calculate object's bounding box",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "qrDecompose",
   "hash": "#.qrDecompose",
   "desc": "Decomposes standard 2x3 matrix into transform components",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "radiansToDegrees",
   "hash": "#.radiansToDegrees",
   "desc": "Transforms radians to degrees.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "removeFromArray",
   "hash": "#.removeFromArray",
   "desc": "Removes value from an array. Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "removeListener",
   "hash": "#.removeListener",
   "desc": "Removes an event listener from an element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "removeTransformFromObject",
   "hash": "#.removeTransformFromObject",
   "desc": "given an object and a transform, apply the inverse transform to the object, this is equivalent to remove from that object that transformation, so that added in a space with the removed transform, the object will be the same as before. Removing from an object a transform that scale by 2 is like scaling it by 1/2. Removing from an object a transfrom that rotate by 30deg is like rotating by 30deg in the opposite direction. This util is used to add objects inside transformed groups or nested groups.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "request",
   "hash": "#.request",
   "desc": "Cross-browser abstraction for sending XMLHttpRequest",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "requestAnimFrame",
   "hash": "#.requestAnimFrame",
   "desc": "requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/ In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "resetObjectTransform",
   "hash": "#.resetObjectTransform",
   "desc": "reset an object transform state to neutral. Top and left are not accounted for",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "resolveNamespace",
   "hash": "#.resolveNamespace",
   "desc": "Returns object of given namespace",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "rotatePoint",
   "hash": "#.rotatePoint",
   "desc": "Rotates `point` around `origin` with `radians`",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "rotateVector",
   "hash": "#.rotateVector",
   "desc": "Rotates `vector` with `radians`",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "saveObjectTransform",
   "hash": "#.saveObjectTransform",
   "desc": "Extract Object transform values",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "setStyle",
   "hash": "#.setStyle",
   "desc": "Cross-browser wrapper for setting element's style",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "sin",
   "hash": "#.sin",
   "desc": "Calculate the sin of an angle, avoiding returning floats for known results",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "sizeAfterTransform",
   "hash": "#.sizeAfterTransform",
   "desc": "given a width and height, return the size of the bounding box that can contains the box with width/height with applied transform described in options. Use to calculate the boxes around objects for controls.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "toArray",
   "hash": "#.toArray",
   "desc": "Converts an array-like object (e.g. arguments or NodeList) to an array",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "toDataURL",
   "hash": "#.toDataURL",
   "desc": "since 2.6.0 moved from canvas instance to utility.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "toFixed",
   "hash": "#.toFixed",
   "desc": "A wrapper around Number#toFixed, which contrary to native method returns number, not string.",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "transformPoint",
   "hash": "#.transformPoint",
   "desc": "Apply transform t to point p",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "wrapElement",
   "hash": "#.wrapElement",
   "desc": "Wraps element with another element",
   "file": 64
  },
  {
   "section": "Methods",
   "name": "clone",
   "hash": "#.clone",
   "desc": "Creates an empty object and copies all enumerable properties of another object to it This method is mostly for internal use, and not intended for duplicating shapes in canvas.",
   "file": 65
  },
  {
   "section": "Methods",
   "name": "extend",
   "hash": "#.extend",
   "desc": "Copies all enumerable properties of one js object to another this does not and cannot compete with generic utils. Does not clone or extend fabric.Object subclasses. This is mostly for internal use and has extra handling for fabricJS objects it skips the canvas and group properties in deep cloning.",
   "file": 65
  },
  {
   "section": "Methods",
   "name": "camelize",
   "hash": "#.camelize",
   "desc": "Camelizes a string",
   "file": 66
  },
  {
   "section": "Methods",
   "name": "capitalize",
   "hash": "#.capitalize",
   "desc": "Capitalizes a string",
   "file": 66
  },
  {
   "section": "Methods",
   "name": "escapeXml",
   "hash": "#.escapeXml",
   "desc": "Escapes XML in a string",
   "file": 66
  },
  {
   "section": "Methods",
   "name": "graphemeSplit",
   "hash": "#.graphemeSplit",
   "desc": "Divide a string in the user perceived single units",
   "file": 66
  },
  {
   "section": "Members",
   "name": "__cachedLines",
   "hash": "#__cachedLines",
   "desc": "Cached array of text wrapping.",
   "file": 67
  },
  {
   "section": "Members",
   "name": "dynamicMinWidth",
   "hash": "#dynamicMinWidth",
   "desc": "Minimum calculated width of a textbox, in pixels. fixed to 2 so that an empty textbox cannot go to 0 and is still selectable without text.",
   "file": 67
  },
  {
   "section": "Members",
   "name": "lockScalingFlip",
   "hash": "#lockScalingFlip",
   "desc": "Override standard Object class values",
   "file": 67
  },
  {
   "section": "Members",
   "name": "minWidth",
   "hash": "#minWidth",
   "desc": "Minimum width of textbox, in pixels.",
   "file": 67
  },
  {
   "section": "Members",
   "name": "noScaleCache",
   "hash": "#noScaleCache",
   "desc": "Override standard Object class values Textbox needs this on false",
   "file": 67
  },
  {
   "section": "Members",
   "name": "splitByGrapheme",
   "hash": "#splitByGrapheme",
   "desc": "Use this boolean property in order to split strings that have no white space concept. this is a cheap way to help with chinese/japanese",
   "file": 67
  },
  {
   "section": "Members",
   "name": "type",
   "hash": "#type",
   "desc": "Type of an object",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "_splitTextIntoLines",
   "hash": "#_splitTextIntoLines",
   "desc": "Gets lines of text to render in the Textbox. This function calculates text wrapping on the fly every time it is called.",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "_wrapLine",
   "hash": "#_wrapLine",
   "desc": "Wraps a line of text using the width of the Textbox and a context.",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "_wrapText",
   "hash": "#_wrapText",
   "desc": "Wraps text using the 'width' property of Textbox. First this function splits text on newlines, so we preserve newlines entered by the user. Then it wraps each line using the width of the Textbox by calling _wrapLine().",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "applyFilters",
   "hash": "#applyFilters",
   "desc": "Applies filters assigned to this image (from \"filters\" array) or from filter param",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "cancelAll",
   "hash": "#cancelAll",
   "desc": "cancel all running animations at the next requestAnimFrame",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "cancelByCanvas",
   "hash": "#cancelByCanvas",
   "desc": "cancel all running animations attached to canvas at the next requestAnimFrame",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "cancelByTarget",
   "hash": "#cancelByTarget",
   "desc": "cancel all running animations for target at the next requestAnimFrame",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "copyGLTo2DDrawImage",
   "hash": "#copyGLTo2DDrawImage",
   "desc": "Copy an input WebGL canvas on to an output 2D canvas.  The WebGL canvas is assumed to be upside down, with the top-left pixel of the desired output image appearing in the bottom-left corner of the WebGL canvas.",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "copyGLTo2DPutImageData",
   "hash": "#copyGLTo2DPutImageData",
   "desc": "Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "findAnimation",
   "hash": "#findAnimation",
   "desc": null,
   "file": 67
  },
  {
   "section": "Methods",
   "name": "findAnimationIndex",
   "hash": "#findAnimationIndex",
   "desc": null,
   "file": 67
  },
  {
   "section": "Methods",
   "name": "findAnimationsByTarget",
   "hash": "#findAnimationsByTarget",
   "desc": null,
   "file": 67
  },
  {
   "section": "Methods",
   "name": "isEmptyStyles",
   "hash": "#isEmptyStyles",
   "desc": "Returns true if object has no styling or no styling in a line",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "isEndOfWrapping",
   "hash": "#isEndOfWrapping",
   "desc": "Detect if the text line is ended with an hard break text and itext do not have wrapping, return false",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "missingNewlineOffset",
   "hash": "#missingNewlineOffset",
   "desc": "Detect if a line has a linebreak and so we need to account for it when moving and counting style.",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "styleHas",
   "hash": "#styleHas",
   "desc": "Returns true if object has a style property or has it on a specified line",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 67
  },
  {
   "section": "Methods",
   "name": "toObject",
   "hash": "#toObject",
   "desc": "Returns object representation of an instance",
   "file": 67
  }
 ]
}